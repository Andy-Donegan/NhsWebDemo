"use strict";var __extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};return function(t,e){function r(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var merge=U.merge,extend=U.extend;function toFixed(t,e){return parseFloat(t.toFixed(e))}function calculateDirection(t,e,r,i){return 1===t&&i<e||-1===t&&i<r?1:-1}function getAccelerationFactor(t,e,r,i,n,o,a,c){return t===e?1===t&&i<r||-1===t&&r<i?n===a?a:toFixed(n+o,2):n:c}function getExtremePoint(t,e,r,i){return 1===r?i<t?t:i:e<i?e:i}function getEPMinusPSAR(t,e){return t-e}function getAccelerationFactorMultiply(t,e){return t*e}function getPSAR(t,e,r,i,n,o,a,c,u){return t===e?1===t?r+i<Math.min(n,o)?r+i:Math.min(n,o):r+i>Math.max(c,a)?r+i:Math.max(c,a):u}var PSARIndicator=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.data=void 0,t.points=void 0,t.options=void 0,t}return __extends(t,e),t.prototype.getValues=function(t,e){var r,i,n,o,a,c,u,l,s,p,d=t.xData,f=t.yData,m=f[0][1],x=e.initialAccelerationFactor,A=e.maxAccelerationFactor,g=e.increment,h=e.initialAccelerationFactor,y=f[0][2],F=e.decimals,S=e.index,P=[],v=[],M=[],_=1;if(!(S>=f.length)){for(p=0;p<S;p++)m=Math.max(f[p][1],m),y=Math.min(f[p][2],toFixed(y,F));for(r=f[p][1]>y?1:-1,i=getEPMinusPSAR(m,y),n=getAccelerationFactorMultiply(x=e.initialAccelerationFactor,i),P.push([d[S],y]),v.push(d[S]),M.push(toFixed(y,F)),p=S+1;p<f.length;p++)o=f[p-1][2],a=f[p-2][2],c=f[p-1][1],u=f[p-2][1],l=f[p][1],s=f[p][2],null!==a&&null!==u&&null!==o&&null!==c&&null!==l&&null!==s&&(y=getPSAR(r,_,y,n,a,o,c,u,m),u=getExtremePoint(l,s,r,m),n=getAccelerationFactorMultiply(x=getAccelerationFactor(l=calculateDirection(_,s,l,y),r,u,m,x,g,A,h),getEPMinusPSAR(u,y)),P.push([d[p],toFixed(y,F)]),v.push(d[p]),M.push(toFixed(y,F)),_=r,r=l,m=u);return{values:P,xData:v,yData:M}}},t.defaultOptions=merge(SMAIndicator.defaultOptions,{lineWidth:0,marker:{enabled:!0},states:{hover:{lineWidthPlus:0}},params:{period:void 0,initialAccelerationFactor:.02,maxAccelerationFactor:.2,increment:.02,index:2,decimals:4}}),t}(SMAIndicator);extend(PSARIndicator.prototype,{nameComponents:void 0}),SeriesRegistry.registerSeriesType("psar",PSARIndicator);export default PSARIndicator;