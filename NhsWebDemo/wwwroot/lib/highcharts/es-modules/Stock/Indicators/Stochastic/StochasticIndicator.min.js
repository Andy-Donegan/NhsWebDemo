"use strict";var __extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)};return function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}();import AU from"../ArrayUtilities.js";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var extend=U.extend,isArray=U.isArray,merge=U.merge,StochasticIndicator=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return __extends(t,e),t.prototype.init=function(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=merge({smoothedLine:{styles:{lineColor:this.color}}},this.options)},t.prototype.getValues=function(t,e){var o,i,r,s=e.periods[0],n=e.periods[1],a=t.xData,p=t.yData,l=p?p.length:0,c=[],y=[],d=[],m=null;if(!(l<s)&&isArray(p[0])&&4===p[0].length){for(r=s-1;r<l;r++)o=p.slice(r-s+1,r+1),o=(i=AU.getArrayExtremes(o,2,1))[0],o=(p[r][3]-o)/(i[1]-o)*100,y.push(a[r]),d.push([o,null]),s-1+(n-1)<=r&&(m=SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this,{xData:y.slice(-n),yData:d.slice(-n)},{period:n}).yData[0]),c.push([a[r],o,m]),d[d.length-1][1]=m;return{values:c,xData:y,yData:d}}},t.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0,periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),t}(SMAIndicator);extend(StochasticIndicator.prototype,{areaLinesNames:[],nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"]}),MultipleLinesComposition.compose(StochasticIndicator),SeriesRegistry.registerSeriesType("stochastic",StochasticIndicator);export default StochasticIndicator;