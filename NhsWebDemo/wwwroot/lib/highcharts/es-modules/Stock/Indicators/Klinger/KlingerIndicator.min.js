"use strict";var __extends=this&&this.__extends||function(){var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,SMAIndicator=_a.sma,EMAIndicator=_a.ema;import U from"../../../Core/Utilities.js";var correctFloat=U.correctFloat,error=U.error,extend=U.extend,isArray=U.isArray,merge=U.merge,KlingerIndicator=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.data=void 0,e.points=void 0,e.options=void 0,e.volumeSeries=void 0,e}return __extends(e,t),e.prototype.calculateTrend=function(e,t){return e[t][1]+e[t][2]+e[t][3]>e[t-1][1]+e[t-1][2]+e[t-1][3]?1:-1},e.prototype.isValidData=function(e){var t=this.chart,r=this.options,o=this.linkedParent,e=isArray(e)&&4===e.length,t=this.volumeSeries||(this.volumeSeries=t.get(r.params.volumeSeriesID));return t||error("Series "+r.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",!0,o.chart),!(![o,t].every(function(e){return e&&e.xData&&e.xData.length>=r.params.slowAvgPeriod})||!e)},e.prototype.getCM=function(e,t,r,o,i){return correctFloat(t+(r===o?e:i))},e.prototype.getDM=function(e,t){return correctFloat(e-t)},e.prototype.getVolumeForce=function(e){for(var t,r,o,i,n=[],s=1,a=0,l=e[0][1]-e[0][2],p=0;s<e.length;s++)i=this.calculateTrend(e,s),r=this.getDM(e[s][1],e[s][2]),t=this.getCM(a,r,i,p,l),o=this.volumeSeries.yData[s]*i*Math.abs(2*(r/t-1))*100,n.push([o]),p=i,a=t,l=r;return n},e.prototype.getEMA=function(e,t,r,o,i,n,s){return EMAIndicator.prototype.calculateEma(s||[],e,void 0===n?1:n,o,t,void 0===i?-1:i,r)},e.prototype.getSMA=function(e,t,r){return EMAIndicator.prototype.accumulatePeriodPoints(e,t,r)/e},e.prototype.getValues=function(e,t){var r,o=[],i=e.xData,n=e.yData,s=[],a=[],l=[],p=0,u=0,c=void 0,g=void 0,d=null;if(this.isValidData(n[0])){for(var y=this.getVolumeForce(n),v=this.getSMA(t.fastAvgPeriod,0,y),m=this.getSMA(t.slowAvgPeriod,0,y),f=2/(t.fastAvgPeriod+1),h=2/(t.slowAvgPeriod+1);p<n.length;p++)p>=t.fastAvgPeriod&&(c=u=this.getEMA(y,c,v,f,0,p,i)[1]),p>=t.slowAvgPeriod&&(r=this.getEMA(y,g,m,h,0,p,i)[1],r=correctFloat(u-(g=r)),l.push(r),l.length>=t.signalPeriod&&(d=l.slice(-t.signalPeriod).reduce(function(e,t){return e+t})/t.signalPeriod),o.push([i[p],r,d]),s.push(i[p]),a.push([r,d]));return{values:o,xData:s,yData:a}}},e.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">Klinger</span>: {point.y}<br/><span style="color: {point.series.options.signalLine.styles.lineColor}">Signal</span>: {point.signal}<br/>'}}),e}(SMAIndicator);extend(KlingerIndicator.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"}),MultipleLinesComposition.compose(KlingerIndicator),SeriesRegistry.registerSeriesType("klinger",KlingerIndicator);export default KlingerIndicator;