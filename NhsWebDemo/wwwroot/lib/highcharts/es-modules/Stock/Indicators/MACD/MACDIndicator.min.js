"use strict";var __extends=this&&this.__extends||function(){var i=function(e,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var t in o)o.hasOwnProperty(t)&&(e[t]=o[t])})(e,o)};return function(e,o){function t(){this.constructor=e}i(e,o),e.prototype=null===o?Object.create(o):(t.prototype=o.prototype,new t)}}();import H from"../../../Core/Globals.js";var noop=H.noop;import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,SMAIndicator=_a.sma,ColumnSeries=_a.column;import U from"../../../Core/Utilities.js";var extend=U.extend,correctFloat=U.correctFloat,defined=U.defined,merge=U.merge,MACDIndicator=function(i){function e(){var e=null!==i&&i.apply(this,arguments)||this;return e.data=void 0,e.options=void 0,e.points=void 0,e.currentLineZone=void 0,e.graphmacd=void 0,e.graphsignal=void 0,e.macdZones=void 0,e.signalZones=void 0,e}return __extends(e,i),e.prototype.init=function(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments),this.options&&(this.options=merge({signalLine:{styles:{lineColor:this.color}},macdLine:{styles:{color:this.color}}},this.options),this.macdZones={zones:this.options.macdLine.zones,startIndex:0},this.signalZones={zones:this.macdZones.zones.concat(this.options.signalLine.zones),startIndex:this.macdZones.zones.length},this.resetZones=!0)},e.prototype.toYData=function(e){return[e.y,e.signal,e.MACD]},e.prototype.translate=function(){var i=this,s=["plotSignal","plotMACD"];H.seriesTypes.column.prototype.translate.apply(i),i.points.forEach(function(t){[t.signal,t.MACD].forEach(function(e,o){null!==e&&(t[s[o]]=i.yAxis.toPixels(e,!0))})})},e.prototype.destroy=function(){this.graph=null,this.graphmacd=this.graphmacd&&this.graphmacd.destroy(),this.graphsignal=this.graphsignal&&this.graphsignal.destroy(),SeriesRegistry.seriesTypes.sma.prototype.destroy.apply(this,arguments)},e.prototype.drawGraph=function(){for(var e,t=this,o=t.points,i=o.length,s=t.options,n=t.zones,r={options:{gapSize:s.gapSize}},a=[[],[]];i--;)e=o[i],defined(e.plotMACD)&&a[0].push({plotX:e.plotX,plotY:e.plotMACD,isNull:!defined(e.plotMACD)}),defined(e.plotSignal)&&a[1].push({plotX:e.plotX,plotY:e.plotSignal,isNull:!defined(e.plotMACD)});["macd","signal"].forEach(function(e,o){t.points=a[o],t.options=merge(s[e+"Line"].styles,r),t.graph=t["graph"+e],t.currentLineZone=e+"Zones",t.zones=t[t.currentLineZone].zones,SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(t),t["graph"+e]=t.graph}),t.points=o,t.options=s,t.zones=n,t.currentLineZone=null},e.prototype.getZonesGraphs=function(e){var o=i.prototype.getZonesGraphs.call(this,e),t=o;return this.currentLineZone&&((t=o.splice(this[this.currentLineZone].startIndex+1)).length?t.splice(0,0,e[0]):t=[e[0]]),t},e.prototype.applyZones=function(){var e=this.zones;this.zones=this.signalZones.zones,SeriesRegistry.seriesTypes.sma.prototype.applyZones.call(this),this.graphmacd&&this.options.macdLine.zones.length&&this.graphmacd.hide(),this.zones=e},e.prototype.getValues=function(e,o){var t,i,s,n,r=o.longPeriod-o.shortPeriod,a=0,p=[],l=[],d=[];if(!(e.xData.length<o.longPeriod+o.signalPeriod)){for(i=SeriesRegistry.seriesTypes.ema.prototype.getValues(e,{period:o.shortPeriod,index:o.index}),s=SeriesRegistry.seriesTypes.ema.prototype.getValues(e,{period:o.longPeriod,index:o.index}),i=i.values,s=s.values,n=0;n<=i.length;n++)defined(s[n])&&defined(s[n][1])&&defined(i[n+r])&&defined(i[n+r][0])&&p.push([i[n+r][0],0,null,i[n+r][1]-s[n][1]]);for(n=0;n<p.length;n++)l.push(p[n][0]),d.push([0,null,p[n][3]]);for(t=SeriesRegistry.seriesTypes.ema.prototype.getValues({xData:l,yData:d},{period:o.signalPeriod,index:2}).values,n=0;n<p.length;n++)p[n][0]>=t[0][0]&&(p[n][2]=t[a][1],d[n]=[0,t[a][1],p[n][3]],null===p[n][3]?(p[n][1]=0,d[n][0]=0):(p[n][1]=correctFloat(p[n][3]-t[a][1]),d[n][0]=correctFloat(p[n][3]-t[a][1])),a++);return{values:p,xData:l,yData:d}}},e.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{shortPeriod:12,longPeriod:26,signalPeriod:9,period:26},signalLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},macdLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},threshold:0,groupPadding:.1,pointPadding:.1,crisp:!1,states:{hover:{halo:{size:0}}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>Value: {point.MACD}<br/>Signal: {point.signal}<br/>Histogram: {point.y}<br/>'},dataGrouping:{approximation:"averages"},minPointLength:0}),e}(SMAIndicator);extend(MACDIndicator.prototype,{nameComponents:["longPeriod","shortPeriod","signalPeriod"],pointArrayMap:["y","signal","MACD"],parallelArrays:["x","y","signal","MACD"],pointValKey:"y",markerAttribs:noop,getColumnMetrics:H.seriesTypes.column.prototype.getColumnMetrics,crispCol:H.seriesTypes.column.prototype.crispCol,drawPoints:H.seriesTypes.column.prototype.drawPoints}),SeriesRegistry.registerSeriesType("macd",MACDIndicator);export default MACDIndicator;