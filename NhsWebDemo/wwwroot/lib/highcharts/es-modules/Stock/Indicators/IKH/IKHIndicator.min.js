"use strict";var __extends=this&&this.__extends||function(){var n=function(o,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,e){o.__proto__=e}||function(o,e){for(var t in e)e.hasOwnProperty(t)&&(o[t]=e[t])})(o,e)};return function(o,e){function t(){this.constructor=o}n(o,e),o.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}}();import Color from"../../../Core/Color/Color.js";var color=Color.parse;import H from"../../../Core/Globals.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var defined=U.defined,extend=U.extend,isArray=U.isArray,isNumber=U.isNumber,merge=U.merge,objectEach=U.objectEach;function maxHigh(o){return o.reduce(function(o,e){return Math.max(o,e[1])},-1/0)}function minLow(o){return o.reduce(function(o,e){return Math.min(o,e[2])},1/0)}function highlowLevel(o){return{high:maxHigh(o),low:minLow(o)}}function getClosestPointRange(o){var e,t,n,i,r;return o.series.forEach(function(o){if(o.xData)for(i=o.xData,t=o.xIncrement?1:i.length-1,r=t;0<r;r--)n=i[r]-i[r-1],(void 0===e||n<e)&&(e=n)}),e}function checkLineIntersection(o,e,t,n){if(o&&e&&t&&n){var i=e.plotX-o.plotX,r=e.plotY-o.plotY,p=n.plotX-t.plotX,s=n.plotY-t.plotY,a=o.plotX-t.plotX,e=o.plotY-t.plotY,n=void 0,t=void 0,t=(p*e-s*a)/(-p*r+i*s);if(0<=(n=(-r*a+i*e)/(-p*r+i*s))&&n<=1&&0<=t&&t<=1)return{plotX:o.plotX+t*i,plotY:o.plotY+t*r}}return!1}function drawSenkouSpan(o){var e=o.indicator;e.points=o.points,e.nextPoints=o.nextPoints,e.color=o.color,e.options=merge(o.options.senkouSpan.styles,o.gap),e.graph=o.graph,e.fillGraph=!0,SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(e)}H.approximations["ichimoku-averages"]=function(){var t,n=[];return[].forEach.call(arguments,function(o,e){n.push(H.approximations.average(o)),t=!t&&void 0===n[e]}),t?void 0:n};var IKHIndicator=function(e){function o(){var o=null!==e&&e.apply(this,arguments)||this;return o.data=void 0,o.options=void 0,o.points=void 0,o.graphCollection=void 0,o.graphsenkouSpan=void 0,o.ikhMap=void 0,o.nextPoints=void 0,o}return __extends(o,e),o.prototype.init=function(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=merge({tenkanLine:{styles:{lineColor:this.color}},kijunLine:{styles:{lineColor:this.color}},chikouLine:{styles:{lineColor:this.color}},senkouSpanA:{styles:{lineColor:this.color,fill:color(this.color).setOpacity(.5).get()}},senkouSpanB:{styles:{lineColor:this.color,fill:color(this.color).setOpacity(.5).get()}},senkouSpan:{styles:{fill:color(this.color).setOpacity(.2).get()}}},this.options)},o.prototype.toYData=function(o){return[o.tenkanSen,o.kijunSen,o.chikouSpan,o.senkouSpanA,o.senkouSpanB]},o.prototype.translate=function(){var n=this;SeriesRegistry.seriesTypes.sma.prototype.translate.apply(n),n.points.forEach(function(t){n.pointArrayMap.forEach(function(o){var e=t[o];isNumber(e)&&(t["plot"+o]=n.yAxis.toPixels(e,!0),t.plotY=t["plot"+o],t.tooltipPos=[t.plotX,t["plot"+o]],t.isNull=!1)})})},o.prototype.drawGraph=function(){var o,e,t,n,i,r,p,s,a,l,h,c,u,g,f,S=this,d=S.points,y=d.length,k=S.options,v=S.graph,m=S.color,x={options:{gapSize:k.gapSize}},A=S.pointArrayMap.length,C=[[],[],[],[],[],[]],P={tenkanLine:C[0],kijunLine:C[1],chikouLine:C[2],senkouSpanA:C[3],senkouSpanB:C[4],senkouSpan:C[5]},Y=[],b=S.options.senkouSpan,w=b.color||b.styles.fill,L=b.negativeColor,B=[[],[]],N=[[],[]],I=0;for(S.ikhMap=P;y--;){for(e=d[y],t=0;t<A;t++)o=S.pointArrayMap[t],defined(e[o])&&C[t].push({plotX:e.plotX,plotY:e["plot"+o],isNull:!1});L&&y!==d.length-1&&(u=P.senkouSpanB.length-1,f={plotX:(g=checkLineIntersection(P.senkouSpanA[u-1],P.senkouSpanA[u],P.senkouSpanB[u-1],P.senkouSpanB[u])).plotX,plotY:g.plotY,isNull:!1,intersectPoint:!0},g&&(P.senkouSpanA.splice(u,0,f),P.senkouSpanB.splice(u,0,f),Y.push(u)))}if(objectEach(P,function(o,e){k[e]&&"senkouSpan"!==e&&(S.points=C[I],S.options=merge(k[e].styles,x),S.graph=S["graph"+e],S.fillGraph=!1,S.color=m,SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(S),S["graph"+e]=S.graph),I++}),S.graphCollection&&S.graphCollection.forEach(function(o){S[o].destroy(),delete S[o]}),S.graphCollection=[],L&&P.senkouSpanA[0]&&P.senkouSpanB[0]){for(Y.unshift(0),Y.push(P.senkouSpanA.length-1),h=0;h<Y.length-1;h++)if(n=Y[h],j=Y[h+1],i=P.senkouSpanB.slice(n,j+1),r=P.senkouSpanA.slice(n,j+1),1<=Math.floor(i.length/2)){var j=Math.floor(i.length/2);if(i[j].plotY===r[j].plotY){for(c=s=p=0;c<i.length;c++)p+=i[c].plotY,s+=r[c].plotY;B[l=s<p?0:1]=B[l].concat(i),N[l]=N[l].concat(r)}else l=i[j].plotY>r[j].plotY?0:1,B[l]=B[l].concat(i),N[l]=N[l].concat(r)}else l=i[0].plotY>r[0].plotY?0:1,B[l]=B[l].concat(i),N[l]=N[l].concat(r);["graphsenkouSpanColor","graphsenkouSpanNegativeColor"].forEach(function(o,e){B[e].length&&N[e].length&&(a=0===e?w:L,drawSenkouSpan({indicator:S,points:B[e],nextPoints:N[e],color:a,options:k,gap:x,graph:S[o]}),S[o]=S.graph,S.graphCollection.push(o))})}else drawSenkouSpan({indicator:S,points:P.senkouSpanB,nextPoints:P.senkouSpanA,color:w,options:k,gap:x,graph:S.graphsenkouSpan}),S.graphsenkouSpan=S.graph;delete S.nextPoints,delete S.fillGraph,S.points=d,S.options=k,S.graph=v,S.color=m},o.prototype.getGraphPath=function(o){var e,t=this,n=[],i=[];if(o=o||this.points,t.fillGraph&&t.nextPoints){if((e=SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(t,t.nextPoints))&&e.length){e[0][0]="L";for(var n=SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(t,o),r=(i=e.slice(0,n.length)).length-1;0<=r;r--)n.push(i[r])}}else n=SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.apply(t,arguments);return n},o.prototype.getValues=function(o,e){var t,n,i,r,p,s,a,l,h=e.period,c=e.periodTenkan,u=e.periodSenkouSpanB,g=o.xData,f=o.yData,o=o.xAxis,S=f&&f.length||0,d=getClosestPointRange(o),y=[],k=[];if(!(g.length<=h)&&isArray(f[0])&&4===f[0].length){for(t=g[0]-h*d,i=0;i<h;i++)k.push(t+i*d);for(i=0;i<S;i++)c<=i&&(r=((r=highlowLevel(f.slice(i-c,i))).high+r.low)/2),h<=i&&(a=(r+(p=((a=highlowLevel(f.slice(i-h,i))).high+a.low)/2))/2),u<=i&&(l=((s=highlowLevel(f.slice(i-u,i))).high+s.low)/2),s=f[i][3],n=g[i],void 0===y[i]&&(y[i]=[]),void 0===y[i+h]&&(y[i+h]=[]),y[i+h][0]=r,y[i+h][1]=p,y[i+h][2]=void 0,y[i][2]=s,i<=h&&(y[i+h][3]=void 0,y[i+h][4]=void 0),void 0===y[i+2*h]&&(y[i+2*h]=[]),y[i+2*h][3]=a,y[i+2*h][4]=l,k.push(n);for(i=1;i<=h;i++)k.push(n+i*d);return{values:y,xData:k,yData:y}}},o.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:26,periodTenkan:9,periodSenkouSpanB:52},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>TENKAN SEN: {point.tenkanSen:.3f}<br/>KIJUN SEN: {point.kijunSen:.3f}<br/>CHIKOU SPAN: {point.chikouSpan:.3f}<br/>SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'},tenkanLine:{styles:{lineWidth:1,lineColor:void 0}},kijunLine:{styles:{lineWidth:1,lineColor:void 0}},chikouLine:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanA:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanB:{styles:{lineWidth:1,lineColor:void 0}},senkouSpan:{styles:{fill:"rgba(255, 0, 0, 0.5)"}},dataGrouping:{approximation:"ichimoku-averages"}}),o}(SMAIndicator);extend(IKHIndicator.prototype,{pointArrayMap:["tenkanSen","kijunSen","chikouSpan","senkouSpanA","senkouSpanB"],pointValKey:"tenkanSen",nameComponents:["periodSenkouSpanB","period","periodTenkan"]}),SeriesRegistry.registerSeriesType("ikh",IKHIndicator);export default IKHIndicator;