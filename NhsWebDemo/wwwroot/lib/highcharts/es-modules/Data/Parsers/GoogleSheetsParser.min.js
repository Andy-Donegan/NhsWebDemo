"use strict";var __extends=this&&this.__extends||function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};import DataParser from"./DataParser.js";import DataConverter from"../DataConverter.js";import U from"../../Core/Utilities.js";var merge=U.merge,uniqueKey=U.uniqueKey,GoogleSheetsParser=function(n){function o(e,t){var r=n.call(this)||this;return r.columns=[],r.headers=[],r.options=merge(o.defaultOptions,e),r.converter=t||new DataConverter,r}return __extends(o,n),o.prototype.getSheetColumns=function(e){for(var t,r,n,o,s,a=this.options,i=a.startColumn,l=a.endColumn,u=a.startRow,c=a.endRow,f=[],p=e.feed.entry,h=(p||[]).length,m=0,g=0,d=0;d<h;d++)t=p[d],m=Math.max(m,t.gs$cell.col),g=Math.max(g,t.gs$cell.row);for(d=0;d<m;d++)i<=d&&d<=l&&(f[d-i]=[]);for(d=0;d<h;d++)n=(t=p[d]).gs$cell.row-1,i<=(o=t.gs$cell.col-1)&&o<=l&&u<=n&&n<=c&&(r=null,(s=t.gs$cell||t.content).numericValue?r=0<=s.$t.indexOf("/")||0<=s.$t.indexOf("-")&&-1===s.$t.indexOf(".")?s.$t:0<s.$t.indexOf("%")?100*parseFloat(s.numericValue):parseFloat(s.numericValue):s.$t&&s.$t.length&&(r=s.$t),f[o-i][n-u]=r);for(d=0;d<m;d++){var _=f[d];if(_.length)for(d=0;d<_.length;d++)void 0===_[d]&&(_[d]=null)}return f},o.prototype.parse=function(e,t){var r,n=this,o=merge(!0,n.options,{json:e}),s=n.converter,a=o.json,e=a.feed.entry;n.headers;if(!e||0===e.length)return!1;n.headers=[],n.columns=[],n.emit({type:"parse",columns:n.columns,detail:t,headers:n.headers}),n.columns=n.getSheetColumns(a);for(var i=0,l=n.columns.length;i<l;i++){r=n.columns[i],n.headers[i]=o.firstRowAsNames?r.splice(0,1).toString():uniqueKey();for(var u,c=0,f=r.length;c<f;++c)r[c]&&"string"==typeof r[c]&&((u=s.asGuessedType(r[c]))instanceof Date&&(u=u.getTime()),n.columns[i][c]=u)}n.emit({type:"afterParse",columns:n.columns,detail:t,headers:n.headers})},o.prototype.getTable=function(){return DataParser.getTableFromColumns(this.columns,this.headers)},o.defaultOptions=__assign(__assign({},DataParser.defaultOptions),{json:{}}),o}(DataParser);export default GoogleSheetsParser;