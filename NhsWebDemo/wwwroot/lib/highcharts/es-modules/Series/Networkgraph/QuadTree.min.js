"use strict";import H from"../../Core/Globals.js";import U from"../../Core/Utilities.js";var extend=U.extend,QuadTreeNode=H.QuadTreeNode=function(t){this.box=t,this.boxSize=Math.min(t.width,t.height),this.nodes=[],this.isInternal=!1,this.body=!1,this.isEmpty=!0};extend(QuadTreeNode.prototype,{insert:function(t,i){this.isInternal?this.nodes[this.getBoxPosition(t)].insert(t,i-1):(this.isEmpty=!1,this.body?i?(this.isInternal=!0,this.divideBox(),!0!==this.body&&(this.nodes[this.getBoxPosition(this.body)].insert(this.body,i-1),this.body=!0),this.nodes[this.getBoxPosition(t)].insert(t,i-1)):((i=new QuadTreeNode({top:t.plotX,left:t.plotY,width:.1,height:.1})).body=t,i.isInternal=!1,this.nodes.push(i)):(this.isInternal=!1,this.body=t))},updateMassAndCenter:function(){var i=0,o=0,e=0;this.isInternal?(this.nodes.forEach(function(t){t.isEmpty||(i+=t.mass,o+=t.plotX*t.mass,e+=t.plotY*t.mass)}),o/=i,e/=i):this.body&&(i=this.body.mass,o=this.body.plotX,e=this.body.plotY),this.mass=i,this.plotX=o,this.plotY=e},divideBox:function(){var t=this.box.width/2,i=this.box.height/2;this.nodes[0]=new QuadTreeNode({left:this.box.left,top:this.box.top,width:t,height:i}),this.nodes[1]=new QuadTreeNode({left:this.box.left+t,top:this.box.top,width:t,height:i}),this.nodes[2]=new QuadTreeNode({left:this.box.left+t,top:this.box.top+i,width:t,height:i}),this.nodes[3]=new QuadTreeNode({left:this.box.left,top:this.box.top+i,width:t,height:i})},getBoxPosition:function(t){var i=t.plotX<this.box.left+this.box.width/2,t=t.plotY<this.box.top+this.box.height/2,t=i?t?0:3:t?1:2;return t}});var QuadTree=H.QuadTree=function(t,i,o,e){this.box={left:t,top:i,width:o,height:e},this.maxDepth=25,this.root=new QuadTreeNode(this.box,"0"),this.root.isInternal=!0,this.root.isRoot=!0,this.root.divideBox()};extend(QuadTree.prototype,{insertNodes:function(t){t.forEach(function(t){this.root.insert(t,this.maxDepth)},this)},visitNodeRecursive:function(t,i,o){var e;t=t||this.root,!1!==(e=t===this.root&&i?i(t):e)&&(t.nodes.forEach(function(t){if(t.isInternal){if(!1===(e=i?i(t):e))return;this.visitNodeRecursive(t,i,o)}else t.body&&i&&i(t.body);o&&o(t)},this),t===this.root&&o&&o(t))},calculateMassAndCenter:function(){this.visitNodeRecursive(null,null,function(t){t.updateMassAndCenter()})}});