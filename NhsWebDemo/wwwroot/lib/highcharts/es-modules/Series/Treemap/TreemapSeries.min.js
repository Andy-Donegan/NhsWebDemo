"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};return function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();import Color from"../../Core/Color/Color.js";var color=Color.parse;import ColorMapMixin from"../ColorMapMixin.js";import H from"../../Core/Globals.js";var noop=H.noop;import LegendSymbol from"../../Core/Legend/LegendSymbol.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var Series=SeriesRegistry.series,_a=SeriesRegistry.seriesTypes,ColumnSeries=_a.column,HeatmapSeries=_a.heatmap,ScatterSeries=_a.scatter;import TreemapAlgorithmGroup from"./TreemapAlgorithmGroup.js";import TreemapPoint from"./TreemapPoint.js";import TreemapUtilities from"./TreemapUtilities.js";import TU from"../TreeUtilities.js";var getColor=TU.getColor,getLevelOptions=TU.getLevelOptions,updateRootId=TU.updateRootId;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,correctFloat=U.correctFloat,defined=U.defined,error=U.error,extend=U.extend,fireEvent=U.fireEvent,isArray=U.isArray,isObject=U.isObject,isString=U.isString,merge=U.merge,pick=U.pick,stableSort=U.stableSort;import"./TreemapComposition.js";var TreemapSeries=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.axisRatio=void 0,e.data=void 0,e.mapOptionsToLevel=void 0,e.nodeMap=void 0,e.options=void 0,e.points=void 0,e.rootNode=void 0,e.tree=void 0,e}return __extends(e,t),e.prototype.algorithmCalcPoints=function(e,t,o,i){var r,n,a,l,s,d=o.lW,p=o.lH,h=o.plot,c=0,u=o.elArr.length-1;t?(d=o.nW,p=o.nH):s=o.elArr[o.elArr.length-1],o.elArr.forEach(function(e){(t||c<u)&&(0===o.direction?(r=h.x,n=h.y,l=e/(a=d)):(r=h.x,n=h.y,a=e/(l=p)),i.push({x:r,y:n,width:a,height:correctFloat(l)}),0===o.direction?h.y=h.y+l:h.x=h.x+a),c+=1}),o.reset(),0===o.direction?o.width=o.width-d:o.height=o.height-p,h.y=h.parent.y+(h.parent.height-o.height),h.x=h.parent.x+(h.parent.width-o.width),e&&(o.direction=1-o.direction),t||o.addElement(s)},e.prototype.algorithmFill=function(t,o,e){var i,r,n,a,l,s=[],d=o.direction,p=o.x,h=o.y,c=o.width,u=o.height;return e.forEach(function(e){i=o.width*o.height*(e.val/o.val),r=p,n=h,0===d?(c-=a=i/(l=u),p+=a):(u-=l=i/(a=c),h+=l),s.push({x:r,y:n,width:a,height:l}),t&&(d=1-d)}),s},e.prototype.algorithmLowAspectRatio=function(t,o,e){var i,r=[],n=this,a={x:o.x,y:o.y,parent:o},l=o.direction,s=0,d=e.length-1,p=new TreemapAlgorithmGroup(o.height,o.width,l,a);return e.forEach(function(e){i=o.width*o.height*(e.val/o.val),p.addElement(i),p.lP.nR>p.lP.lR&&n.algorithmCalcPoints(t,!1,p,r,a),s===d&&n.algorithmCalcPoints(t,!0,p,r,a),s+=1}),r},e.prototype.alignDataLabel=function(e,t,o){o=o.style;o&&!defined(o.textOverflow)&&t.text&&t.getBBox().width>t.text.textWidth&&t.css({textOverflow:"ellipsis",width:o.width+="px"}),ColumnSeries.prototype.alignDataLabel.apply(this,arguments),e.dataLabel&&e.dataLabel.attr({zIndex:(e.node.zIndex||0)+1})},e.prototype.buildNode=function(t,e,o,i,r){var n,a=this,l=[],s=a.points[e],d=0;return(i[t]||[]).forEach(function(e){n=a.buildNode(a.points[e].id,e,o+1,i,t),d=Math.max(n.height+1,d),l.push(n)}),r={id:t,i:e,children:l,height:d,level:o,parent:r,visible:!1},a.nodeMap[r.id]=r,s&&(s.node=r),r},e.prototype.calculateChildrenAreas=function(e,o){var i,r=this,t=r.options,n=r.mapOptionsToLevel[e.level+1],a=pick(r[n&&n.layoutAlgorithm]&&n.layoutAlgorithm,t.layoutAlgorithm),l=t.alternateStartingDirection,e=e.children.filter(function(e){return!e.ignore});n&&n.layoutStartingDirection&&(o.direction="vertical"===n.layoutStartingDirection?0:1),i=r[a](o,e),e.forEach(function(e,t){t=i[t];e.values=merge(t,{val:e.childrenTotal,direction:l?1-o.direction:o.direction}),e.pointValues=merge(t,{x:t.x/r.axisRatio,y:TreemapUtilities.AXIS_MAX-t.y-t.height,width:t.width/r.axisRatio}),e.children.length&&r.calculateChildrenAreas(e,e.values)})},e.prototype.drawDataLabels=function(){var t,o,i=this,r=i.mapOptionsToLevel;i.points.filter(function(e){return e.node.visible}).forEach(function(e){o=r[e.node.level],t={style:{}},e.node.isLeaf||(t.enabled=!1),o&&o.dataLabels&&(t=merge(t,o.dataLabels),i._hasPointLabels=!0),e.shapeArgs&&(t.style.width=e.shapeArgs.width,e.dataLabel&&e.dataLabel.css({width:e.shapeArgs.width+"px"})),e.dlOptions=merge(t,e.options.dataLabels)}),Series.prototype.drawDataLabels.call(this)},e.prototype.drawPoints=function(){var d=this,e=d.chart,p=e.renderer,t=d.points,h=e.styledMode,c=d.options,u=h?{}:c.shadow,v=c.borderRadius,g=e.pointCount<c.animationLimit,f=c.allowTraversingTree;t.forEach(function(e){var t=e.node.levelDynamic,o={},i={},r={},n="level-group-"+e.node.level,a=!!e.graphic,l=g&&a,s=e.shapeArgs;e.shouldDraw()&&(e.isInside=!0,v&&(i.r=v),merge(!0,l?o:i,a?s:{},h?{}:d.pointAttribs(e,e.selected?"select":void 0)),d.colorAttribs&&h&&extend(r,d.colorAttribs(e)),d[n]||(d[n]=p.g(n).attr({zIndex:1e3-(t||0)}).add(d.group),d[n].survive=!0)),e.draw({animatableAttribs:o,attribs:i,css:r,group:d[n],renderer:p,shadow:u,shapeArgs:s,shapeType:"rect"}),f&&e.graphic&&(e.drillId=c.interactByLeaf?d.drillToByLeaf(e):d.drillToByGroup(e))})},e.prototype.drillToByGroup=function(e){var t=!1;return t=e.node.level-this.nodeMap[this.rootNode].level==1&&!e.node.isLeaf?e.id:t},e.prototype.drillToByLeaf=function(e){var t,o=!1;if(e.node.parent!==this.rootNode&&e.node.isLeaf)for(t=e.node;!o;)(t=this.nodeMap[t.parent]).parent===this.rootNode&&(o=t.id);return o},e.prototype.drillToNode=function(e,t){error(32,!1,void 0,{"treemap.drillToNode":"use treemap.setRootNode"}),this.setRootNode(e,t)},e.prototype.drillUp=function(){var e=this.nodeMap[this.rootNode];e&&isString(e.parent)&&this.setRootNode(e.parent,!0,{trigger:"traverseUpButton"})},e.prototype.getExtremes=function(){var e=Series.prototype.getExtremes.call(this,this.colorValueData),t=e.dataMin,e=e.dataMax;return this.valueMin=t,this.valueMax=e,Series.prototype.getExtremes.call(this)},e.prototype.getListOfParents=function(e,t){var e=isArray(e)?e:[],i=isArray(t)?t:[],e=e.reduce(function(e,t,o){t=pick(t.parent,"");return void 0===e[t]&&(e[t]=[]),e[t].push(o),e},{"":[]});return TreemapUtilities.eachObject(e,function(e,t,o){""!==t&&-1===i.indexOf(t)&&(e.forEach(function(e){o[""].push(e)}),delete o[t])}),e},e.prototype.getTree=function(){var e=this.data.map(function(e){return e.id}),e=this.getListOfParents(this.data,e);return this.nodeMap={},this.buildNode("",-1,0,e)},e.prototype.hasData=function(){return!!this.processedXData.length},e.prototype.init=function(e,t){var o,i=this;this.colorAttribs=ColorMapMixin.SeriesMixin.colorAttribs,o=addEvent(i,"setOptions",function(e){e=e.userOptions;defined(e.allowDrillToNode)&&!defined(e.allowTraversingTree)&&(e.allowTraversingTree=e.allowDrillToNode,delete e.allowDrillToNode),defined(e.drillUpButton)&&!defined(e.traverseUpButton)&&(e.traverseUpButton=e.drillUpButton,delete e.drillUpButton)}),Series.prototype.init.call(i,e,t),delete i.opacity,i.eventsToUnbind.push(o),i.options.allowTraversingTree&&i.eventsToUnbind.push(addEvent(i,"click",i.onClickDrillToNode))},e.prototype.onClickDrillToNode=function(e){var t=e.point,e=t&&t.drillId;isString(e)&&(t.setState(""),this.setRootNode(e,!0,{trigger:"click"}))},e.prototype.pointAttribs=function(e,t){var o=isObject(this.mapOptionsToLevel)?this.mapOptionsToLevel:{},i=e&&o[e.node.level]||{},r=this.options,n=t&&r.states[t]||{},o=e&&e.getClassName()||"",e={stroke:e&&e.borderColor||i.borderColor||n.borderColor||r.borderColor,"stroke-width":pick(e&&e.borderWidth,i.borderWidth,n.borderWidth,r.borderWidth),dashstyle:e&&e.borderDashStyle||i.borderDashStyle||n.borderDashStyle||r.borderDashStyle,fill:e&&e.color||this.color};return-1!==o.indexOf("highcharts-above-level")?(e.fill="none",e["stroke-width"]=0):-1!==o.indexOf("highcharts-internal-node-interactive")?(r=pick(n.opacity,r.opacity),e.fill=color(e.fill).setOpacity(r).get(),e.cursor="pointer"):-1!==o.indexOf("highcharts-internal-node")?e.fill="none":t&&(e.fill=color(e.fill).brighten(n.brightness).get()),e},e.prototype.renderTraverseUpButton=function(e){var t=this,o=t.nodeMap[e].name,i=t.options.traverseUpButton,r=pick(i.text,o,"◁ Back");""===e||t.is("sunburst")&&1===t.tree.children.length&&e===t.tree.children[0].id?t.drillUpButton&&(t.drillUpButton=t.drillUpButton.destroy()):this.drillUpButton?(this.drillUpButton.placed=!1,this.drillUpButton.attr({text:r}).align()):(e=(o=i.theme)&&o.states,this.drillUpButton=this.chart.renderer.button(r,0,0,function(){t.drillUp()},o,e&&e.hover,e&&e.select).addClass("highcharts-drillup-button").attr({align:i.position.align,zIndex:7}).add().align(i.position,!1,i.relativeTo||"plotBox"))},e.prototype.setColorRecursive=function(o,e,t,i,r){var n,a=this,l=a&&a.chart,l=l&&l.options&&l.options.colors;o&&(n=getColor(o,{colors:l,index:i,mapOptionsToLevel:a.mapOptionsToLevel,parentColor:e,parentColorIndex:t,series:a,siblings:r}),(r=a.points[o.i])&&(r.color=n.color,r.colorIndex=n.colorIndex),(o.children||[]).forEach(function(e,t){a.setColorRecursive(e,n.color,n.colorIndex,t,o.children.length)}))},e.prototype.setPointValues=function(){var l=this,e=l.points,s=l.xAxis,d=l.yAxis,p=l.chart.styledMode;e.forEach(function(e){var t,o,i,r=e.node,n=r.pointValues,a=r.visible;n&&a?(t=n.height,i=n.width,o=n.x,r=n.y,a=e,n=p?0:(l.pointAttribs(a)["stroke-width"]||0)%2/2,a=Math.round(s.toPixels(o,!0))-n,o=Math.round(s.toPixels(o+i,!0))-n,i=Math.round(d.toPixels(r,!0))-n,n=Math.round(d.toPixels(r+t,!0))-n,i={x:Math.min(a,o),y:Math.min(i,n),width:Math.abs(o-a),height:Math.abs(n-i)},e.plotX=i.x+i.width/2,e.plotY=i.y+i.height/2,e.shapeArgs=i):(delete e.plotX,delete e.plotY)})},e.prototype.setRootNode=function(e,t,o){o=extend({newRootId:e,previousRootId:this.rootNode,redraw:pick(t,!0),series:this},o);fireEvent(this,"setRootNode",o,function(e){var t=e.series;t.idPreviousRoot=e.previousRootId,t.rootNode=e.newRootId,t.isDirty=!0,e.redraw&&t.chart.redraw()})},e.prototype.setState=function(e){this.options.inactiveOtherPoints=!0,Series.prototype.setState.call(this,e,!1),this.options.inactiveOtherPoints=!1},e.prototype.setTreeValues=function(e){var t=this,o=t.options,i=t.rootNode,r=t.nodeMap[i],n=!TreemapUtilities.isBoolean(o.levelIsConstant)||o.levelIsConstant,a=0,l=[],i=t.points[e.i];return e.children.forEach(function(e){e=t.setTreeValues(e),l.push(e),e.ignore||(a+=e.val)}),stableSort(l,function(e,t){return(e.sortIndex||0)-(t.sortIndex||0)}),o=pick(i&&i.options.value,a),i&&(i.value=o),extend(e,{children:l,childrenTotal:a,ignore:!(pick(i&&i.visible,!0)&&0<o),isLeaf:e.visible&&!a,levelDynamic:e.level-(n?0:r.level),name:pick(i&&i.name,""),sortIndex:pick(i&&i.sortIndex,-o),val:o}),e},e.prototype.sliceAndDice=function(e,t){return this.algorithmFill(!0,e,t)},e.prototype.squarified=function(e,t){return this.algorithmLowAspectRatio(!0,e,t)},e.prototype.strip=function(e,t){return this.algorithmLowAspectRatio(!1,e,t)},e.prototype.stripes=function(e,t){return this.algorithmFill(!1,e,t)},e.prototype.translate=function(){var e,t,i=this,o=i.options,r=updateRootId(i);Series.prototype.translate.call(i),e=i.tree=i.getTree(),t=i.nodeMap[r],""===r||t&&t.children.length||(i.setRootNode("",!1),r=i.rootNode,t=i.nodeMap[r]),i.renderTraverseUpButton(r),i.mapOptionsToLevel=getLevelOptions({from:t.level+1,levels:o.levels,to:e.height,defaults:{levelIsConstant:i.options.levelIsConstant,colorByPoint:o.colorByPoint}}),TreemapUtilities.recursive(i.nodeMap[i.rootNode],function(e){var t=!1,o=e.parent;return e.visible=!0,t=o||""===o?i.nodeMap[o]:t}),TreemapUtilities.recursive(i.nodeMap[i.rootNode].children,function(e){var t=!1;return e.forEach(function(e){e.visible=!0,e.children.length&&(t=(t||[]).concat(e.children))}),t}),i.setTreeValues(e),i.axisRatio=i.xAxis.len/i.yAxis.len,i.nodeMap[""].pointValues=r={x:0,y:0,width:TreemapUtilities.AXIS_MAX,height:TreemapUtilities.AXIS_MAX},i.nodeMap[""].values=r=merge(r,{width:r.width*i.axisRatio,direction:"vertical"===o.layoutStartingDirection?0:1,val:e.val}),i.calculateChildrenAreas(e,r),i.colorAxis||o.colorByPoint||i.setColorRecursive(i.tree),o.allowTraversingTree&&(t=t.pointValues,i.xAxis.setExtremes(t.x,t.x+t.width,!1),i.yAxis.setExtremes(t.y,t.y+t.height,!1),i.xAxis.setScale(),i.yAxis.setScale()),i.setPointValues()},e.defaultOptions=merge(ScatterSeries.defaultOptions,{allowTraversingTree:!1,animationLimit:250,borderRadius:0,showInLegend:!1,marker:void 0,colorByPoint:!1,dataLabels:{defer:!1,enabled:!0,formatter:function(){var e=this&&this.point?this.point:{};return isString(e.name)?e.name:""},inside:!0,verticalAlign:"middle"},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}</b>: {point.value}<br/>"},ignoreHiddenPoint:!0,layoutAlgorithm:"sliceAndDice",layoutStartingDirection:"vertical",alternateStartingDirection:!1,levelIsConstant:!0,drillUpButton:{position:{align:"right",x:-10,y:10}},traverseUpButton:{position:{align:"right",x:-10,y:10}},borderColor:"#e6e6e6",borderWidth:1,colorKey:"colorValue",opacity:.15,states:{hover:{borderColor:"#999999",brightness:HeatmapSeries?0:.1,halo:!1,opacity:.75,shadow:!1}}}),e}(ScatterSeries);extend(TreemapSeries.prototype,{buildKDTree:noop,colorKey:"colorValue",directTouch:!0,drawLegendSymbol:LegendSymbol.drawRectangle,getExtremesFromAll:!0,getSymbol:noop,optionalAxis:"colorAxis",parallelArrays:["x","y","value","colorValue"],pointArrayMap:["value"],pointClass:TreemapPoint,trackerGroups:["group","dataLabelsGroup"],utils:{recursive:TreemapUtilities.recursive}}),SeriesRegistry.registerSeriesType("treemap",TreemapSeries);export default TreemapSeries;