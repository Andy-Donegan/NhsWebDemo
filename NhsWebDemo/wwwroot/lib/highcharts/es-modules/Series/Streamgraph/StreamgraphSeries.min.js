"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var AreaSplineSeries=SeriesRegistry.seriesTypes.areaspline;import U from"../../Core/Utilities.js";var merge=U.merge,extend=U.extend,StreamgraphSeries=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.data=void 0,e.points=void 0,e.options=void 0,e}return __extends(e,t),e.prototype.streamStacker=function(e,t,r){e[0]-=t.total/2,e[1]-=t.total/2,this.stackedYData[r]=e},e.defaultOptions=merge(AreaSplineSeries.defaultOptions,{fillOpacity:1,lineWidth:0,marker:{enabled:!1},stacking:"stream"}),e}(AreaSplineSeries);extend(StreamgraphSeries.prototype,{negStacks:!1}),SeriesRegistry.registerSeriesType("streamgraph",StreamgraphSeries);export default StreamgraphSeries;