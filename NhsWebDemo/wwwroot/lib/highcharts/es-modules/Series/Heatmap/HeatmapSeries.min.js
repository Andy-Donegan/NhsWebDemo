"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import Color from"../../Core/Color/Color.js";import ColorMapMixin from"../ColorMapMixin.js";import HeatmapPoint from"./HeatmapPoint.js";import LegendSymbol from"../../Core/Legend/LegendSymbol.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var Series=SeriesRegistry.series,_a=SeriesRegistry.seriesTypes,ColumnSeries=_a.column,ScatterSeries=_a.scatter;import SVGRenderer from"../../Core/Renderer/SVG/SVGRenderer.js";var symbols=SVGRenderer.prototype.symbols;import U from"../../Core/Utilities.js";var extend=U.extend,fireEvent=U.fireEvent,isNumber=U.isNumber,merge=U.merge,pick=U.pick,HeatmapSeries=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.colorAxis=void 0,e.data=void 0,e.options=void 0,e.points=void 0,e.valueMax=NaN,e.valueMin=NaN,e}return __extends(e,t),e.prototype.drawPoints=function(){var t=this;((this.options.marker||{}).enabled||this._hasPointMarkers)&&(Series.prototype.drawPoints.call(this),this.points.forEach(function(e){e.graphic&&(e.graphic[t.chart.styledMode?"css":"animate"](t.colorAttribs(e)),t.options.borderRadius&&e.graphic.attr({r:t.options.borderRadius}),(e.shapeArgs||{}).r=t.options.borderRadius,(e.shapeArgs||{}).d=e.graphic.pathArray,null===e.value&&e.graphic.addClass("highcharts-null-point"))}))},e.prototype.getExtremes=function(){var e=Series.prototype.getExtremes.call(this,this.valueData),t=e.dataMin,e=e.dataMax;return isNumber(t)&&(this.valueMin=t),isNumber(e)&&(this.valueMax=e),Series.prototype.getExtremes.call(this)},e.prototype.getValidPoints=function(e,t){return Series.prototype.getValidPoints.call(this,e,t,!0)},e.prototype.hasData=function(){return!!this.processedXData.length},e.prototype.init=function(){var e;Series.prototype.init.apply(this,arguments),(e=this.options).pointRange=pick(e.pointRange,e.colsize||1),this.yAxis.axisPointRange=e.rowsize||1,symbols.ellipse=symbols.circle},e.prototype.markerAttribs=function(e,t){var r,i,o=e.marker||{},s=this.options.marker||{},a=e.shapeArgs||{},n=e.hasImage,p={};return n?{x:e.plotX,y:e.plotY}:(t&&(r=s.states[t]||{},i=o.states&&o.states[t]||{},[["width","x"],["height","y"]].forEach(function(e){p[e[0]]=(i[e[0]]||r[e[0]]||a[e[0]])+(i[e[0]+"Plus"]||r[e[0]+"Plus"]||0),p[e[1]]=a[e[1]]+(a[e[0]]-p[e[0]])/2})),t?p:a)},e.prototype.pointAttribs=function(e,t){var r=this,i=Series.prototype.pointAttribs.call(r,e,t),o=r.options||{},s=r.chart.options.plotOptions||{},a=s.series||{},r=s.heatmap||{},s=e&&e.options.borderColor||o.borderColor||r.borderColor||a.borderColor,a=e&&e.options.borderWidth||o.borderWidth||r.borderWidth||a.borderWidth||i["stroke-width"];return i.stroke=e&&e.marker&&e.marker.lineColor||o.marker&&o.marker.lineColor||s||this.color,i["stroke-width"]=a,t&&(t=(e=merge(o.states[t],o.marker&&o.marker.states[t],e&&e.options.states&&e.options.states[t]||{})).brightness,i.fill=e.color||Color.parse(i.fill).brighten(t||0).get(),i.stroke=e.lineColor),i},e.prototype.setClip=function(e){var t=this,r=t.chart;Series.prototype.setClip.apply(t,arguments),!1===t.options.clip&&!e||t.markerGroup.clip((e||t.clipBox)&&t.sharedClipKey?r.sharedClips[t.sharedClipKey]:r.clipRect)},e.prototype.translate=function(){var e=this,t=e.options,s=t.marker&&t.marker.symbol||"rect",a=symbols[s]?s:"rect",n=-1!==["circle","square"].indexOf(a);e.generatePoints(),e.points.forEach(function(e){var t,r,i=e.getCellAttributes(),o={};o.x=Math.min(i.x1,i.x2),o.y=Math.min(i.y1,i.y2),o.width=Math.max(Math.abs(i.x2-i.x1),0),o.height=Math.max(Math.abs(i.y2-i.y1),0),r=e.hasImage=0===(e.marker&&e.marker.symbol||s||"").indexOf("url"),n&&(t=Math.abs(o.width-o.height),o.x=Math.min(i.x1,i.x2)+(o.width<o.height?0:t/2),o.y=Math.min(i.y1,i.y2)+(o.width<o.height?t/2:0),o.width=o.height=Math.min(o.width,o.height)),i={plotX:(i.x1+i.x2)/2,plotY:(i.y1+i.y2)/2,clientX:(i.x1+i.x2)/2,shapeType:"path",shapeArgs:merge(!0,o,{d:symbols[a](o.x,o.y,o.width,o.height)})},r&&(e.marker={width:o.width,height:o.height}),extend(e,i)}),fireEvent(e,"afterTranslate")},e.defaultOptions=merge(ScatterSeries.defaultOptions,{animation:!1,borderRadius:0,borderWidth:0,nullColor:"#f7f7f7",dataLabels:{formatter:function(){var e=this.series.chart.numberFormatter,t=this.point.value;return isNumber(t)?e(t,-1):""},inside:!0,verticalAlign:"middle",crop:!1,overflow:!1,padding:0},marker:{symbol:"rect",radius:0,lineColor:void 0,states:{hover:{lineWidthPlus:0},select:{}}},clip:!0,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{hover:{halo:!1,brightness:.2}}}),e}(ScatterSeries);extend(HeatmapSeries.prototype,{alignDataLabel:ColumnSeries.prototype.alignDataLabel,axisTypes:ColorMapMixin.SeriesMixin.axisTypes,colorAttribs:ColorMapMixin.SeriesMixin.colorAttribs,colorKey:ColorMapMixin.SeriesMixin.colorKey,directTouch:!0,drawLegendSymbol:LegendSymbol.drawRectangle,getExtremesFromAll:!0,getSymbol:Series.prototype.getSymbol,parallelArrays:ColorMapMixin.SeriesMixin.parallelArrays,pointArrayMap:["y","value"],pointClass:HeatmapPoint,trackerGroups:ColorMapMixin.SeriesMixin.trackerGroups}),SeriesRegistry.registerSeriesType("heatmap",HeatmapSeries);export default HeatmapSeries;