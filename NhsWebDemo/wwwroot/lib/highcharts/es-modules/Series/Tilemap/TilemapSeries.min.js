"use strict";var __extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};return function(t,e){function r(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();import H from"../../Core/Globals.js";var noop=H.noop;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,ColumnSeries=_a.column,HeatmapSeries=_a.heatmap,ScatterSeries=_a.scatter;import TilemapPoint from"./TilemapPoint.js";import TilemapShapes from"./TilemapShapes.js";import U from"../../Core/Utilities.js";var extend=U.extend,merge=U.merge;import"./TilemapComposition.js";var TilemapSeries=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t.tileShape=void 0,t}return __extends(t,e),t.prototype.alignDataLabel=function(){return this.tileShape.alignDataLabel.apply(this,Array.prototype.slice.call(arguments))},t.prototype.drawPoints=function(){var e=this;ColumnSeries.prototype.drawPoints.call(this),this.points.forEach(function(t){t.graphic&&t.graphic[e.chart.styledMode?"css":"animate"](e.colorAttribs(t))})},t.prototype.getSeriesPixelPadding=function(t){var e,r=t.isXAxis,i=this.tileShape.getSeriesPadding(this);return i?(e=Math.round(t.translate(r?2*i.xPad:i.yPad,0,1,0,1)),i=Math.round(t.translate(r?i.xPad:0,0,1,0,1)),{padding:Math.abs(e-i)||0,axisLengthFactor:r?2:1.1}):{padding:0,axisLengthFactor:1}},t.prototype.setOptions=function(){var t=e.prototype.setOptions.apply(this,Array.prototype.slice.call(arguments));return this.tileShape=TilemapShapes[t.tileShape],t},t.prototype.translate=function(){return this.tileShape.translate.apply(this,Array.prototype.slice.call(arguments))},t.defaultOptions=merge(HeatmapSeries.defaultOptions,{marker:null,states:{hover:{halo:{enabled:!0,size:2,opacity:.5,attributes:{zIndex:3}}}},pointPadding:2,tileShape:"hexagon"}),t}(HeatmapSeries);extend(TilemapSeries.prototype,{getSymbol:noop,markerAttribs:ScatterSeries.prototype.markerAttribs,pointAttribs:ColumnSeries.prototype.pointAttribs,pointClass:TilemapPoint}),SeriesRegistry.registerSeriesType("tilemap",TilemapSeries);export default TilemapSeries;