"use strict";import Color from"../../Core/Color/Color.js";var color=Color.parse;import H from"../../Core/Globals.js";var charts=H.charts,deg2rad=H.deg2rad;import Math3D from"../../Extensions/Math3D.js";var perspective=Math3D.perspective;import RendererRegistry from"../../Core/Renderer/RendererRegistry.js";import U from"../../Core/Utilities.js";var merge=U.merge,pick=U.pick,rendererProto=RendererRegistry.getRendererType().prototype,cuboidPath=rendererProto.cuboidPath,isSimplified=function(r){return!r.some(function(r){return"C"===r[0]})},cylinderMethods=merge(rendererProto.elements3d.cuboid,{parts:["top","bottom","front","back"],pathType:"cylinder",fillSetter:function(r){return this.singleSetterForParts("fill",null,{front:r,back:r,top:color(r).brighten(.1).get(),bottom:color(r).brighten(-.1).get()}),this.color=this.fill=r,this}});rendererProto.elements3d.cylinder=cylinderMethods,rendererProto.cylinder=function(r){return this.element3d("cylinder",r)},rendererProto.cylinderPath=function(r){var e=this,t=charts[e.chartIndex],o=cuboidPath.call(e,r),i=!o.isTop,n=!o.isFront,s=e.getCylinderEnd(t,r),r=e.getCylinderEnd(t,r,!0);return{front:e.getCylinderFront(s,r),back:e.getCylinderBack(s,r),top:s,bottom:r,zIndexes:{top:i?3:0,bottom:i?0:3,front:n?2:1,back:n?1:2,group:o.zIndexes.group}}},rendererProto.getCylinderFront=function(r,e){var t,o=r.slice(0,3);return isSimplified(e)?"M"===(t=e[0])[0]&&(o.push(e[2]),o.push(e[1]),o.push(["L",t[1],t[2]])):(t=e[0],r=e[1],e=e[2],"M"===t[0]&&"C"===r[0]&&"C"===e[0]&&(o.push(["L",e[5],e[6]]),o.push(["C",e[3],e[4],e[1],e[2],r[5],r[6]]),o.push(["C",r[3],r[4],r[1],r[2],t[1],t[2]]))),o.push(["Z"]),o},rendererProto.getCylinderBack=function(r,e){var t,o,i=[];return isSimplified(r)?(o=r[0],t=r[2],"M"===o[0]&&"L"===t[0]&&(i.push(["M",t[1],t[2]]),i.push(r[3]),i.push(["L",o[1],o[2]]))):("C"===r[2][0]&&i.push(["M",r[2][5],r[2][6]]),i.push(r[3],r[4])),isSimplified(e)?"M"===(o=e[0])[0]&&(i.push(["L",o[1],o[2]]),i.push(e[3]),i.push(e[2])):(r=e[2],o=e[3],e=e[4],"C"===r[0]&&"C"===o[0]&&"C"===e[0]&&(i.push(["L",e[5],e[6]]),i.push(["C",e[3],e[4],e[1],e[2],o[5],o[6]]),i.push(["C",o[3],o[4],o[1],o[2],r[5],r[6]]))),i.push(["Z"]),i},rendererProto.getCylinderEnd=function(r,e,t){var o,i,n=e.width,s=void 0===n?0:n,d=e.height,h=void 0===d?0:d,p=e.alphaCorrection,n=void 0===p?0:p,d=pick(e.depth,s,0),p=Math.min(s,d)/2,n=deg2rad*(r.options.chart.options3d.beta-90+n),t=(e.y||0)+(t?h:0),h=.5519*p,a=s/2+(e.x||0),u=d/2+(e.z||0),c=[{x:0,y:t,z:p},{x:h,y:t,z:p},{x:p,y:t,z:h},{x:p,y:t,z:0},{x:p,y:t,z:-h},{x:h,y:t,z:-p},{x:0,y:t,z:-p},{x:-h,y:t,z:-p},{x:-p,y:t,z:-h},{x:-p,y:t,z:0},{x:-p,y:t,z:h},{x:-h,y:t,z:p},{x:0,y:t,z:p}],l=Math.cos(n),y=Math.sin(n);return c.forEach(function(r,e){o=r.x,i=r.z,c[e].x=o*l-i*y+a,c[e].z=i*l+o*y+u}),r=perspective(c,r,!0),Math.abs(r[3].y-r[9].y)<2.5&&Math.abs(r[0].y-r[6].y)<2.5?this.toLinePath([r[0],r[3],r[6],r[9]],!0):this.getCurvedPath(r)},rendererProto.getCurvedPath=function(r){for(var e=[["M",r[0].x,r[0].y]],t=r.length-2,o=1;o<t;o+=3)e.push(["C",r[o].x,r[o].y,r[o+1].x,r[o+1].y,r[o+2].x,r[o+2].y]);return e};