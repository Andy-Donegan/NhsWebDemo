"use strict";import H from"../Core/Globals.js";import D from"../Core/DefaultOptions.js";var defaultOptions=D.defaultOptions;import Point from"../Core/Series/Point.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,defined=U.defined,error=U.error,extend=U.extend,merge=U.merge,objectEach=U.objectEach,pick=U.pick,splat=U.splat;import"../Extensions/ArrowSymbols.js";var deg2rad=H.deg2rad,max=Math.max,min=Math.min;function getPointBB(t){var r=t.shapeArgs;return r?{xMin:r.x||0,xMax:(r.x||0)+(r.width||0),yMin:r.y||0,yMax:(r.y||0)+(r.height||0)}:(r=t.graphic&&t.graphic.getBBox())?{xMin:t.plotX-r.width/2,xMax:t.plotX+r.width/2,yMin:t.plotY-r.height/2,yMax:t.plotY+r.height/2}:null}function calculateObstacleMargin(t){for(var r,i,e=t.length,o=0,a=[],s=function(t,r,i){var e=pick(i,10),o=t.yMax+e>r.yMin-e&&t.yMin-e<r.yMax+e,a=t.xMax+e>r.xMin-e&&t.xMin-e<r.xMax+e,n=o?t.xMin>r.xMax?t.xMin-r.xMax:r.xMin-t.xMax:1/0,i=a?t.yMin>r.yMax?t.yMin-r.yMax:r.yMin-t.yMax:1/0;return a&&o?e?s(t,r,Math.floor(e/2)):1/0:min(n,i)};o<e;++o)for(r=o+1;r<e;++r)(i=s(t[o],t[r]))<80&&a.push(i);return a.push(80),max(Math.floor(a.sort(function(t,r){return t-r})[Math.floor(a.length/10)]/2-1),1)}extend(defaultOptions,{connectors:{type:"straight",lineWidth:1,marker:{enabled:!1,align:"center",verticalAlign:"middle",inside:!1,lineWidth:1},startMarker:{symbol:"diamond"},endMarker:{symbol:"arrow-filled"}}});var Connection=function(){function t(t,r,i){this.chart=void 0,this.fromPoint=void 0,this.graphics=void 0,this.pathfinder=void 0,this.toPoint=void 0,this.init(t,r,i)}return t.prototype.init=function(t,r,i){this.fromPoint=t,this.toPoint=r,this.options=i,this.chart=t.series.chart,this.pathfinder=this.chart.pathfinder},t.prototype.renderPath=function(t,r,i){var e=this.chart,o=e.styledMode,a=e.pathfinder,n=!e.options.chart.forExport&&!1!==i,s=this.graphics&&this.graphics.path;a.group||(a.group=e.renderer.g().addClass("highcharts-pathfinder-group").attr({zIndex:-1}).add(e.seriesGroup)),a.group.translate(e.plotLeft,e.plotTop),s&&s.renderer||(s=e.renderer.path().add(a.group),o||s.attr({opacity:0})),s.attr(r),t={d:t},o||(t.opacity=1),s[n?"animate":"attr"](t,i),this.graphics=this.graphics||{},this.graphics.path=s},t.prototype.addMarker=function(t,r,i){var e,o,a,n=this,s=n.fromPoint.series.chart,h=s.pathfinder,c=s.renderer,d="start"===t?n.fromPoint:n.toPoint,s=d.getPathfinderAnchorPoint(r);r.enabled&&((a="start"===t?i[1]:i[i.length-2])&&"M"===a[0]||"L"===a[0])&&(a={x:a[1],y:a[2]},a=d.getRadiansToVector(a,s),s=d.getMarkerVector(a,r.radius,s),a=-a/deg2rad,r.width&&r.height?(e=r.width,o=r.height):e=o=2*r.radius,n.graphics=n.graphics||{},s={x:s.x-e/2,y:s.y-o/2,width:e,height:o,rotation:a,rotationOriginX:s.x,rotationOriginY:s.y},n.graphics[t]?n.graphics[t].animate(s):(n.graphics[t]=c.symbol(r.symbol).addClass("highcharts-point-connecting-path-"+t+"-marker").attr(s).add(h.group),c.styledMode||n.graphics[t].attr({fill:r.color||n.fromPoint.color,stroke:r.lineColor,"stroke-width":r.lineWidth,opacity:0}).animate({opacity:1},d.series.options.animation)))},t.prototype.getPath=function(t){var r=this.pathfinder,i=this.chart,e=r.algorithms[t.type],o=r.chartObstacles;return"function"!=typeof e?(error('"'+t.type+'" is not a Pathfinder algorithm.'),{path:[],obstacles:[]}):(e.requiresObstacles&&!o&&(o=r.chartObstacles=r.getChartObstacles(t),i.options.connectors.algorithmMargin=t.algorithmMargin,r.chartObstacleMetrics=r.getObstacleMetrics(o)),e(this.fromPoint.getPathfinderAnchorPoint(t.startMarker),this.toPoint.getPathfinderAnchorPoint(t.endMarker),merge({chartObstacles:o,lineObstacles:r.lineObstacles||[],obstacleMetrics:r.chartObstacleMetrics,hardBounds:{xMin:0,xMax:i.plotWidth,yMin:0,yMax:i.plotHeight},obstacleOptions:{margin:t.algorithmMargin},startDirectionX:r.getAlgorithmStartDirection(t.startMarker)},t)))},t.prototype.render=function(){var t=this,r=t.fromPoint,i=r.series,e=i.chart,o=e.pathfinder,a=merge(e.options.connectors,i.options.connectors,r.options.connectors,t.options),n={};e.styledMode||(n.stroke=a.lineColor||r.color,n["stroke-width"]=a.lineWidth,a.dashStyle&&(n.dashstyle=a.dashStyle)),n.class="highcharts-point-connecting-path highcharts-color-"+r.colorIndex,a=merge(n,a),defined(a.marker.radius)||(a.marker.radius=min(max(Math.ceil((a.algorithmMargin||8)/2)-1,1),5)),r=(e=t.getPath(a)).path,e.obstacles&&(o.lineObstacles=o.lineObstacles||[],o.lineObstacles=o.lineObstacles.concat(e.obstacles)),t.renderPath(r,n,i.options.animation),t.addMarker("start",merge(a.marker,a.startMarker),r),t.addMarker("end",merge(a.marker,a.endMarker),r)},t.prototype.destroy=function(){this.graphics&&(objectEach(this.graphics,function(t){t.destroy()}),delete this.graphics)},t}();function warnLegacy(t){(t.options.pathfinder||t.series.reduce(function(t,r){return r.options&&merge(!0,r.options.connectors=r.options.connectors||{},r.options.pathfinder),t||r.options&&r.options.pathfinder},!1))&&(merge(!0,t.options.connectors=t.options.connectors||{},t.options.pathfinder),error('WARNING: Pathfinder options have been renamed. Use "chart.connectors" or "series.connectors" instead.'))}H.Connection=Connection,extend(Point.prototype,{getPathfinderAnchorPoint:function(t){var r,i,e=getPointBB(this);switch(t.align){case"right":r="xMax";break;case"left":r="xMin"}switch(t.verticalAlign){case"top":i="yMin";break;case"bottom":i="yMax"}return{x:r?e[r]:(e.xMin+e.xMax)/2,y:i?e[i]:(e.yMin+e.yMax)/2}},getRadiansToVector:function(t,r){var i;return defined(r)||(i=getPointBB(this))&&(r={x:(i.xMin+i.xMax)/2,y:(i.yMin+i.yMax)/2}),Math.atan2(r.y-t.y,t.x-r.x)},getMarkerVector:function(t,r,i){for(var e,o=2*Math.PI,a=t,n=getPointBB(this),s=n.xMax-n.xMin,h=n.yMax-n.yMin,c=Math.atan2(h,s),d=!1,p=s/2,l=h/2,g=n.xMin+p,M=n.yMin+l,t={x:g,y:M},s=1,n=1;a<-Math.PI;)a+=o;for(;a>Math.PI;)a-=o;return e=Math.tan(a),-c<a&&a<=c?(n=-1,d=!0):c<a&&a<=Math.PI-c?n=-1:a>Math.PI-c||a<=-(Math.PI-c)?(s=-1,d=!0):s=-1,d?(t.x+=s*p,t.y+=n*p*e):(t.x+=s*(h/(2*e)),t.y+=n*l),i.x!==g&&(t.x=i.x),i.y!==M&&(t.y=i.y),{x:t.x+r*Math.cos(a),y:t.y-r*Math.sin(a)}}});export default Connection;