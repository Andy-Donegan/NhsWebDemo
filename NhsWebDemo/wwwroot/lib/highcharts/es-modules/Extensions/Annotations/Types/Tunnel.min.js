"use strict";var __extends=this&&this.__extends||function(){var i=function(t,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(t,o)};return function(t,o){function n(){this.constructor=t}i(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import Annotation from"../Annotations.js";import ControlPoint from"../ControlPoint.js";import CrookedLine from"./CrookedLine.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge;function getSecondCoordinate(t,o,n){return(o.y-t.y)/(o.x-t.x)*(n-t.x)+t.y}var Tunnel=function(n){function t(t,o){return n.call(this,t,o)||this}return __extends(t,n),t.prototype.getPointsOptions=function(){var t=CrookedLine.prototype.getPointsOptions.call(this);return t[2]=this.heightPointOptions(t[1]),t[3]=this.heightPointOptions(t[0]),t},t.prototype.getControlPointsOptions=function(){return this.getPointsOptions().slice(0,2)},t.prototype.heightPointOptions=function(t){var o=merge(t),t=this.options.typeOptions;return o.y+=t.height,o},t.prototype.addControlPoints=function(){CrookedLine.prototype.addControlPoints.call(this);var t=this.options,o=t.typeOptions,t=new ControlPoint(this.chart,this,merge(t.controlPointOptions,o.heightControlPoint),2);this.controlPoints.push(t),o.heightControlPoint=t.options},t.prototype.addShapes=function(){this.addLine(),this.addBackground()},t.prototype.addLine=function(){var t=this.initShape(merge(this.options.typeOptions.line,{type:"path",points:[this.points[0],this.points[1],function(t){t=MockPoint.pointToOptions(t.annotation.points[2]);return t.command="M",t},this.points[3]]}),0);this.options.typeOptions.line=t.options},t.prototype.addBackground=function(){var t=this.initShape(merge(this.options.typeOptions.background,{type:"path",points:this.points.slice()}),1);this.options.typeOptions.background=t.options},t.prototype.translateSide=function(t,o,n){var i=Number(n),n=0===i?3:2;this.translatePoint(t,o,i),this.translatePoint(t,o,n)},t.prototype.translateHeight=function(t){this.translatePoint(0,t,2),this.translatePoint(0,t,3),this.options.typeOptions.height=this.points[3].y-this.points[0].y},t}(CrookedLine);Tunnel.prototype.defaultOptions=merge(CrookedLine.prototype.defaultOptions,{typeOptions:{background:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0},line:{strokeWidth:1},height:-2,heightControlPoint:{positioner:function(t){var o=MockPoint.pointToPixels(t.points[2]),n=MockPoint.pointToPixels(t.points[3]),t=(o.x+n.x)/2;return{x:t-this.graphic.width/2,y:getSecondCoordinate(o,n,t)-this.graphic.height/2}},events:{drag:function(t,o){o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop,{visiblePlotOnly:!0})&&(o.translateHeight(this.mouseMoveToTranslation(t).y),o.redraw(!1))}}}},controlPointOptions:{events:{drag:function(t,o){o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop,{visiblePlotOnly:!0})&&(t=this.mouseMoveToTranslation(t),o.translateSide(t.x,t.y,!!this.index),o.redraw(!1))}}}});export default Annotation.types.tunnel=Tunnel;