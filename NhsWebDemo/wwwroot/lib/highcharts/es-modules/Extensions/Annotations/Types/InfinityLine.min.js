"use strict";var __extends=this&&this.__extends||function(){var o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var i in n)n.hasOwnProperty(i)&&(t[i]=n[i])})(t,n)};return function(t,n){function i(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();import Annotation from"../Annotations.js";import CrookedLine from"./CrookedLine.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,InfinityLine=function(i){function f(t,n){return i.call(this,t,n)||this}return __extends(f,i),f.edgePoint=function(o,e){return function(t){var n=t.annotation,i=n.points,t=n.options.typeOptions.type;return"horizontalLine"!==t&&"verticalLine"!==t||(i=[i[0],new MockPoint(n.chart,i[0].target,{x:i[0].x+ +("horizontalLine"===t),y:i[0].y+ +("verticalLine"===t),xAxis:i[0].options.xAxis,yAxis:i[0].options.yAxis})]),f.findEdgePoint(i[o],i[e])}},f.findEdgeCoordinate=function(t,n,i,o){var e="x"===i?"y":"x";return(n[i]-t[i])*(o-t[e])/(n[e]-t[e])+t[i]},f.findEdgePoint=function(t,n){var i=t.series.chart,o=t.series.xAxis,e=n.series.yAxis,r=MockPoint.pointToPixels(t),s=MockPoint.pointToPixels(n),p=s.x-r.x,a=s.y-r.y,d=o.left,y=d+o.width,n=e.top,o=n+e.height,e=p<0?d:y,d=a<0?n:o,y={x:0==p?r.x:e,y:0==a?r.y:d};return 0!=p&&0!=a&&(a=f.findEdgeCoordinate(r,s,"y",e),s=f.findEdgeCoordinate(r,s,"x",d),n<=a&&a<=o?(y.x=e,y.y=a):(y.x=s,y.y=d)),y.x-=i.plotLeft,y.y-=i.plotTop,t.series.chart.inverted&&(t=y.x,y.x=y.y,y.y=t),y},f.prototype.addShapes=function(){var t=this.options.typeOptions,n=[this.points[0],f.endEdgePoint];t.type.match(/line/gi)&&(n[0]=f.startEdgePoint);n=this.initShape(merge(t.line,{type:"path",points:n}),0);t.line=n.options},f.endEdgePoint=f.edgePoint(0,1),f.startEdgePoint=f.edgePoint(1,0),f}(CrookedLine);InfinityLine.prototype.defaultOptions=merge(CrookedLine.prototype.defaultOptions,{});export default Annotation.types.infinityLine=InfinityLine;