"use strict";var __extends=this&&this.__extends||function(){var n=function(t,o){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])})(t,o)};return function(t,o){function e(){this.constructor=t}n(t,o),t.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();import Annotation from"../Annotations.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,pick=U.pick,VerticalLine=function(e){function n(t,o){return e.call(this,t,o)||this}return __extends(n,e),n.connectorFirstPoint=function(t){var o=t.annotation,e=o.chart,n=e.inverted,i=o.points[0],r=pick(i.series.yAxis&&i.series.yAxis.left,0),s=pick(i.series.yAxis&&i.series.yAxis.top,0),t=o.options.typeOptions.label.offset,o=MockPoint.pointToPixels(i,!0)[n?"x":"y"];return{x:i.x,xAxis:i.series.xAxis,y:o+t+(n?r-e.plotLeft:s-e.plotTop)}},n.connectorSecondPoint=function(t){var o=t.annotation,e=o.chart,n=e.inverted,i=o.options.typeOptions,r=o.points[0],s=pick(r.series.yAxis&&r.series.yAxis.left,0),p=pick(r.series.yAxis&&r.series.yAxis.top,0),t=i.yOffset,o=MockPoint.pointToPixels(r,!0)[n?"x":"y"];return i.label.offset<0&&(t*=-1),{x:r.x,xAxis:r.series.xAxis,y:o+t+(n?s-e.plotLeft:p-e.plotTop)}},n.prototype.getPointsOptions=function(){return[this.options.typeOptions.point]},n.prototype.addShapes=function(){var t=this.options.typeOptions,o=this.initShape(merge(t.connector,{type:"path",points:[n.connectorFirstPoint,n.connectorSecondPoint]}),0);t.connector=o.options},n.prototype.addLabels=function(){var t=this.options.typeOptions,o=t.label,e=0,n=o.offset,i=o.offset<0?"bottom":"top",r="center";this.chart.inverted&&(e=o.offset,i="middle",r=o.offset<(n=0)?"right":"left");n=this.initLabel(merge(o,{verticalAlign:i,align:r,x:e,y:n}));t.label=n.options},n}(Annotation);VerticalLine.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{typeOptions:{yOffset:10,label:{offset:-40,point:function(t){return t.annotation.points[0]},allowOverlap:!0,backgroundColor:"none",borderWidth:0,crop:!0,overflow:"none",shape:"rect",text:"{y:.2f}"},connector:{strokeWidth:1,markerEnd:"arrow"}}});export default Annotation.types.verticalLine=VerticalLine;