"use strict";var __extends=this&&this.__extends||function(){var i=function(t,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(t,o)};return function(t,o){function n(){this.constructor=t}i(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import Annotation from"../Annotations.js";import ControlPoint from"../ControlPoint.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,CrookedLine=function(n){function t(t,o){return n.call(this,t,o)||this}return __extends(t,n),t.prototype.setClipAxes=function(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis],this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]},t.prototype.getPointsOptions=function(){var o=this.options.typeOptions;return(o.points||[]).map(function(t){return t.xAxis=o.xAxis,t.yAxis=o.yAxis,t})},t.prototype.getControlPointsOptions=function(){return this.getPointsOptions()},t.prototype.addControlPoints=function(){this.getControlPointsOptions().forEach(function(t,o){o=new ControlPoint(this.chart,this,merge(this.options.controlPointOptions,t.controlPoint),o);this.controlPoints.push(o),t.controlPoint=o.options},this)},t.prototype.addShapes=function(){var t=this.options.typeOptions,o=this.initShape(merge(t.line,{type:"path",points:this.points.map(function(t,o){return function(t){return t.annotation.points[o]}})}),0);t.line=o.options},t}(Annotation);CrookedLine.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{typeOptions:{xAxis:0,yAxis:0,line:{fill:"none"}},controlPointOptions:{positioner:function(t){var o=this.graphic,t=MockPoint.pointToPixels(t.points[this.index]);return{x:t.x-o.width/2,y:t.y-o.height/2}},events:{drag:function(t,o){o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop,{visiblePlotOnly:!0})&&(t=this.mouseMoveToTranslation(t),o.translatePoint(t.x,t.y,this.index),o.options.typeOptions.points[this.index].x=o.points[this.index].x,o.options.typeOptions.points[this.index].y=o.points[this.index].y,o.redraw(!1))}}}});export default Annotation.types.crookedLine=CrookedLine;