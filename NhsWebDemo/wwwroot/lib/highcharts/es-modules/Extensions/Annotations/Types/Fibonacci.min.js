"use strict";var __extends=this&&this.__extends||function(){var o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)};return function(t,n){function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}}();import Annotation from"../Annotations.js";import MockPoint from"../MockPoint.js";import Tunnel from"./Tunnel.js";import U from"../../../Core/Utilities.js";var merge=U.merge,createPathDGenerator=function(o,r){return function(){var t=this.annotation;if(!t.startRetracements||!t.endRetracements)return[];var n=this.anchor(t.startRetracements[o]).absolutePosition,e=this.anchor(t.endRetracements[o]).absolutePosition,n=[["M",Math.round(n.x),Math.round(n.y)],["L",Math.round(e.x),Math.round(e.y)]];return r&&(e=this.anchor(t.endRetracements[o-1]).absolutePosition,t=this.anchor(t.startRetracements[o-1]).absolutePosition,n.push(["L",Math.round(e.x),Math.round(e.y)],["L",Math.round(t.x),Math.round(t.y)])),n}},Fibonacci=function(e){function t(t,n){return e.call(this,t,n)||this}return __extends(t,e),t.prototype.linkPoints=function(){e.prototype.linkPoints.call(this),this.linkRetracementsPoints()},t.prototype.linkRetracementsPoints=function(){var o=this.points,r=o[0].y-o[3].y,i=o[1].y-o[2].y,s=o[0].x,a=o[1].x;t.levels.forEach(function(t,n){var e=o[0].y-r*t,t=o[1].y-i*t;this.startRetracements=this.startRetracements||[],this.endRetracements=this.endRetracements||[],this.linkRetracementPoint(n,s,e,this.startRetracements),this.linkRetracementPoint(n,a,t,this.endRetracements)},this)},t.prototype.linkRetracementPoint=function(t,n,e,o){var r=o[t],i=this.options.typeOptions;r?(r.options.x=n,r.options.y=e,r.refresh()):o[t]=new MockPoint(this.chart,this,{x:n,y:e,xAxis:i.xAxis,yAxis:i.yAxis})},t.prototype.addShapes=function(){t.levels.forEach(function(t,n){var e=this.options.typeOptions,o=e.backgroundColors,r=e.lineColor,e=e.lineColors;this.initShape({type:"path",d:createPathDGenerator(n),stroke:e[n]||r},n),0<n&&this.initShape({type:"path",fill:o[n-1],strokeWidth:0,d:createPathDGenerator(n,!0)})},this)},t.prototype.addLabels=function(){t.levels.forEach(function(t,n){var e=this.options.typeOptions,t=this.initLabel(merge(e.labels[n],{point:function(t){return MockPoint.pointToOptions(t.annotation.startRetracements[n])},text:t.toString()}));e.labels[n]=t.options},this)},t.levels=[0,.236,.382,.5,.618,.786,1],t}(Tunnel);Fibonacci.prototype.defaultOptions=merge(Tunnel.prototype.defaultOptions,{typeOptions:{height:2,backgroundColors:["rgba(130, 170, 255, 0.4)","rgba(139, 191, 216, 0.4)","rgba(150, 216, 192, 0.4)","rgba(156, 229, 161, 0.4)","rgba(162, 241, 130, 0.4)","rgba(169, 255, 101, 0.4)"],lineColor:"#999999",lineColors:[],labels:[]},labelOptions:{allowOverlap:!0,align:"right",backgroundColor:"none",borderWidth:0,crop:!1,overflow:"none",shape:"rect",style:{color:"grey"},verticalAlign:"middle",y:0}});export default Annotation.types.fibonacci=Fibonacci;