"use strict";var __extends=this&&this.__extends||function(){var i=function(t,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(t,o)};return function(t,o){function n(){this.constructor=t}i(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();import Annotation from"../Annotations.js";import ControlPoint from"../ControlPoint.js";import CrookedLine from"./CrookedLine.js";import InfinityLine from"./InfinityLine.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,FibonacciTimeZones=function(t){function o(){return null!==t&&t.apply(this,arguments)||this}return __extends(o,t),o.prototype.edgePoint=function(r,s,p){return function(t){var o=t.annotation.chart,n=o.inverted?o.plotTop:o.plotLeft,i=(e=t.annotation.points)[0].series.xAxis,t=1<e.length?e[1].plotX-e[0].plotX:0,t=i.toValue(e[0].plotX+n+p*t),e=[new MockPoint(o,e[0].target,{x:t,y:0,xAxis:e[0].options.xAxis,yAxis:e[0].options.yAxis}),new MockPoint(o,e[0].target,{x:t,y:1,xAxis:e[0].options.xAxis,yAxis:e[0].options.yAxis})];return InfinityLine.findEdgePoint(e[r],e[s])}},o.prototype.addShapes=function(){for(var t=1,o=1,n=0;n<11;n++){var i=n?t:0,i=[this.edgePoint(1,0,i),this.edgePoint(0,1,i)],t=(o=t+o)-t;1===n&&(this.secondLineEdgePoints=[i[0],i[1]]),this.initShape(merge(this.options.typeOptions.line,{type:"path",points:i}),n)}},o.prototype.addControlPoints=function(){var t=this.options,o=t.typeOptions,t=new ControlPoint(this.chart,this,merge(t.controlPointOptions,o.controlPointOptions),0);this.controlPoints.push(t),o.controlPointOptions=t.options},o}(CrookedLine);FibonacciTimeZones.prototype.defaultOptions=merge(CrookedLine.prototype.defaultOptions,{typeOptions:{line:{stroke:"rgba(0, 0, 0, 0.75)",strokeWidth:1,fill:void 0},controlPointOptions:{positioner:function(){var t=this.target,o=this.graphic,n=t.secondLineEdgePoints,i={annotation:t},e=n[0](i).y,r=n[1](i).y,s=this.chart.plotLeft,t=this.chart.plotTop,i=n[0](i).x,e=(e+r)/2;return this.chart.inverted&&(i=(r=[e,i])[0],e=r[1]),{x:s+i-o.width/2,y:t+e-o.height/2}},events:{drag:function(t,o){o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop,{visiblePlotOnly:!0})&&(t=this.mouseMoveToTranslation(t),o.translatePoint(t.x,0,1),o.redraw(!1))}}}}});export default Annotation.types.fibonacciTimeZones=FibonacciTimeZones;