"use strict";import ControlPoint from"../ControlPoint.js";import MockPoint from"../MockPoint.js";import Tooltip from"../../../Core/Tooltip.js";import U from"../../../Core/Utilities.js";var isObject=U.isObject,isString=U.isString,merge=U.merge,splat=U.splat,controllableMixin={init:function(t,i,o){this.annotation=t,this.chart=t.chart,this.options=i,this.points=[],this.controlPoints=[],this.index=o,this.linkPoints(),this.addControlPoints()},attr:function(){this.graphic.attr.apply(this.graphic,arguments)},getPointsOptions:function(){var t=this.options;return t.points||t.point&&splat(t.point)},attrsFromOptions:function(t){var i,o,n=this.constructor.attrsMap,s={},r=this.chart.styledMode;for(i in t)!(o=n[i])||r&&-1!==["fill","stroke","stroke-width"].indexOf(o)||(s[o]=t[i]);return s},anchor:function(t){var i=t.series.getPlotBox(),o=t.series.chart,n=t.mock?t.toAnchor():Tooltip.prototype.getAnchor.call({chart:t.series.chart},t),n={x:n[0]+(this.options.x||0),y:n[1]+(this.options.y||0),height:n[2]||0,width:n[3]||0};return{relativePosition:n,absolutePosition:merge(n,{x:n.x+(t.mock?i.translateX:o.plotLeft),y:n.y+(t.mock?i.translateY:o.plotTop)})}},point:function(t,i){return t&&t.series?t:(i&&null!==i.series||(isObject(t)?i=new MockPoint(this.chart,this,t):isString(t)?i=this.chart.get(t)||null:"function"==typeof t&&(i=(o=t.call(i,this)).series?o:new MockPoint(this.chart,this,t))),i);var o},linkPoints:function(){for(var t,i=this.getPointsOptions(),o=this.points,n=i&&i.length||0,s=0;s<n;s++){if(!(t=this.point(i[s],o[s])))return void(o.length=0);t.mock&&t.refresh(),o[s]=t}return o},addControlPoints:function(){var o=this.options.controlPoints;(o||[]).forEach(function(t,i){t=merge(this.options.controlPointOptions,t);t.index||(t.index=i),o[i]=t,this.controlPoints.push(new ControlPoint(this.chart,this,t))},this)},shouldBeDrawn:function(){return Boolean(this.points.length)},render:function(t){this.controlPoints.forEach(function(t){t.render()})},redraw:function(i){this.controlPoints.forEach(function(t){t.redraw(i)})},transform:function(o,n,s,r,h){var t;this.chart.inverted&&(t=n,n=s,s=t),this.points.forEach(function(t,i){this.transformPoint(o,n,s,r,h,i)},this)},transformPoint:function(t,i,o,n,s,r){var h=this.points[r];(h=!h.mock?this.points[r]=MockPoint.fromPoint(h):h)[t](i,o,n,s)},translate:function(t,i){this.transform("translate",null,null,t,i)},translatePoint:function(t,i,o){this.transformPoint("translate",null,null,t,i,o)},translateShape:function(t,i,o){var n=this.annotation.chart,s=this.annotation.userOptions,r=n.annotations.indexOf(this.annotation),r=n.options.annotations[r];this.translatePoint(t,i,0),o&&this.translatePoint(t,i,1),r[this.collection][this.index].point=this.options.point,s[this.collection][this.index].point=this.options.point},rotate:function(t,i,o){this.transform("rotate",t,i,o)},scale:function(t,i,o,n){this.transform("scale",t,i,o,n)},setControlPointsVisibility:function(i){this.controlPoints.forEach(function(t){t.setVisibility(i)})},destroy:function(){this.graphic&&(this.graphic=this.graphic.destroy()),this.tracker&&(this.tracker=this.tracker.destroy()),this.controlPoints.forEach(function(t){t.destroy()}),this.chart=null,this.points=null,this.controlPoints=null,this.options=null,this.annotation&&(this.annotation=null)},update:function(t){var i=this.annotation,o=merge(!0,this.options,t),t=this.graphic.parentGroup;this.destroy(),this.constructor(i,o,this.index),this.render(t),this.redraw()}};export default controllableMixin;