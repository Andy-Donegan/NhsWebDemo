"use strict";import Axis from"../Core/Axis/Axis.js";import Chart from"../Core/Chart/Chart.js";import F from"../Core/FormatUtilities.js";var format=F.format;import H from"../Core/Globals.js";import D from"../Core/DefaultOptions.js";var setOptions=D.setOptions;import Series from"../Core/Series/Series.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,arrayMax=U.arrayMax,arrayMin=U.arrayMin,defined=U.defined,erase=U.erase,extend=U.extend,merge=U.merge,pick=U.pick,splat=U.splat,wrap=U.wrap,ChartProto=Chart.prototype,defaultXAxisOptions={lineWidth:0,tickLength:0,opposite:!0,type:"category"},defaultParallelOptions={parallelCoordinates:!1,parallelAxes:{lineWidth:1,title:{text:"",reserveSpace:!1},labels:{x:0,y:4,align:"center",reserveSpace:!1},offset:0}};function addFormattedValue(t){var e,a,i=this.series&&this.series.chart,r=t.apply(this,Array.prototype.slice.call(arguments,1));return i&&i.hasParallelCoordinates&&!defined(r.formattedValue)&&(e=(a=i.yAxis[this.x]).options,e=(t=pick(e.tooltipValueFormat,e.labels.format))?format(t,extend(this,{value:this.y}),i):a.dateTime?i.time.dateFormat(i.time.resolveDTLFormat(e.dateTimeLabelFormats[a.tickPositions.info.unitName]).main,this.y):e.categories?e.categories[this.y]:this.y,r.formattedValue=r.point.formattedValue=e),r}setOptions({chart:defaultParallelOptions}),addEvent(Chart,"init",function(t){var e=t.args[0],t=splat(e.yAxis||{}),a=[],i=t.length;if(this.hasParallelCoordinates=e.chart&&e.chart.parallelCoordinates,this.hasParallelCoordinates){for(this.setParallelInfo(e);i<=this.parallelInfo.counter;i++)a.push({});e.legend||(e.legend={}),void 0===e.legend.enabled&&(e.legend.enabled=!1),merge(!0,e,{boost:{seriesThreshold:Number.MAX_VALUE},plotOptions:{series:{boostThreshold:Number.MAX_VALUE}}}),e.yAxis=t.concat(a),e.xAxis=merge(defaultXAxisOptions,splat(e.xAxis||{})[0])}}),addEvent(Chart,"update",function(t){t=t.options;t.chart&&(defined(t.chart.parallelCoordinates)&&(this.hasParallelCoordinates=t.chart.parallelCoordinates),this.options.chart.parallelAxes=merge(this.options.chart.parallelAxes,t.chart.parallelAxes)),this.hasParallelCoordinates&&(t.series&&this.setParallelInfo(t),this.yAxis.forEach(function(t){t.update({},!1)}))}),extend(ChartProto,{setParallelInfo:function(t){var e=this,t=t.series;e.parallelInfo={counter:0},t.forEach(function(t){t.data&&(e.parallelInfo.counter=Math.max(e.parallelInfo.counter,t.data.length-1))})}}),addEvent(Series,"bindAxes",function(t){var e;this.chart.hasParallelCoordinates&&((e=this).chart.axes.forEach(function(t){e.insert(t.series),t.isDirty=!0}),e.xAxis=this.chart.xAxis[0],e.yAxis=this.chart.yAxis[0],t.preventDefault())}),addEvent(Series,"afterTranslate",function(){var t,e,a,i=this.chart,r=this.points,s=r&&r.length,o=Number.MAX_VALUE;if(this.chart.hasParallelCoordinates){for(a=0;a<s;a++)e=r[a],defined(e.y)?(i.polar?e.plotX=i.yAxis[a].angleRad||0:i.inverted?e.plotX=i.plotHeight-i.yAxis[a].top+i.plotTop:e.plotX=i.yAxis[a].left-i.plotLeft,e.clientX=e.plotX,e.plotY=i.yAxis[a].translate(e.y,!1,!0,null,!0),void 0!==t&&(o=Math.min(o,Math.abs(e.plotX-t))),t=e.plotX,e.isInside=i.isInsidePlot(e.plotX,e.plotY,{inverted:i.inverted})):e.isNull=!0;this.closestPointRangePx=o}},{order:1}),addEvent(Series,"destroy",function(){this.chart.hasParallelCoordinates&&(this.chart.axes||[]).forEach(function(t){t&&t.series&&(erase(t.series,this),t.isDirty=t.forceRedraw=!0)},this)}),["line","spline"].forEach(function(t){wrap(H.seriesTypes[t].prototype.pointClass.prototype,"getLabelConfig",addFormattedValue)});var ParallelAxis,ParallelAxisAdditions=function(){function t(t){this.axis=t}return t.prototype.setPosition=function(t,e){var a=this.axis,i=a.chart,r=((this.position||0)+.5)/(i.parallelInfo.counter+1);i.polar?e.angle=360*r:(e[t[0]]=100*r+"%",a[t[1]]=e[t[1]]=0,a[t[2]]=e[t[2]]=null,a[t[3]]=e[t[3]]=null)},t}();!function(){function e(t){var e,a=this,i=a.chart,r=a.parallelCoordinates,s=["left","width","height","top"];i.hasParallelCoordinates&&(i.inverted&&(s=s.reverse()),a.isXAxis?a.options=merge(a.options,defaultXAxisOptions,t.userOptions):(e=i.yAxis.indexOf(a),a.options=merge(a.options,a.chart.options.chart.parallelAxes,t.userOptions),r.position=pick(r.position,0<=e?e:i.yAxis.length),r.setPosition(s,a.options)))}function a(t){var e,a,i=this,r=i.chart,s=i.parallelCoordinates;s&&r&&r.hasParallelCoordinates&&!i.isXAxis&&(e=s.position,a=[],i.series.forEach(function(t){t.visible&&defined(t.yData[e])&&a.push(t.yData[e])}),i.dataMin=arrayMin(a),i.dataMax=arrayMax(a),t.preventDefault())}function i(){this.parallelCoordinates||(this.parallelCoordinates=new ParallelAxisAdditions(this))}(ParallelAxis||(ParallelAxis={})).compose=function(t){t.keepProps.push("parallel"),addEvent(t,"init",i),addEvent(t,"afterSetOptions",e),addEvent(t,"getSeriesExtremes",a)}}(),ParallelAxis.compose(Axis);export default ParallelAxis;