"use strict";import MusicalFrequencies from"./MusicalFrequencies.js";import SignalHandler from"./SignalHandler.js";import U from"../../Core/Utilities.js";var clamp=U.clamp,merge=U.merge,SonificationUtilities={musicalFrequencies:MusicalFrequencies,SignalHandler:SignalHandler,getExtremesForInstrumentProps:getExtremesForInstrumentProps,getMusicalScale:function(e){return MusicalFrequencies.filter(function(n,i){var t=i%12+1;return e.some(function(n){return n===t})})},calculateDataExtremes:function(n,t){return n.series.reduce(function(i,n){return n.points.forEach(function(n){n=(void 0!==n[t]?n:n.options)[t];i.min=Math.min(i.min,n),i.max=Math.max(i.max,n)}),i},{min:1/0,max:-1/0})},virtualAxisTranslate:function(n,i,t,e){var r=i.max-i.min,a=Math.abs(t.max-t.min),i=e?i.max-n:n-i.min,i=t.min+a*i/r;return 0<r?clamp(i,t.min,t.max):t.min}};function getExtremesForInstrumentProps(e,n,i){function t(n){return{instrumentMapping:n.mapping}}var r=e.options.sonification&&e.options.sonification.defaultInstrumentOptions,a=(n||[]).slice(0);return r&&a.push(t(r)),e.series.forEach(function(n){n=n.options.sonification&&n.options.sonification.instruments;n&&(a=a.concat(n.map(t)))}),a.reduce(function(i,t){return Object.keys(t.instrumentMapping||{}).forEach(function(n){n=t.instrumentMapping[n];"string"!=typeof n||i[n]||(i[n]=SonificationUtilities.calculateDataExtremes(e,n))}),i},merge(i))}export default SonificationUtilities;