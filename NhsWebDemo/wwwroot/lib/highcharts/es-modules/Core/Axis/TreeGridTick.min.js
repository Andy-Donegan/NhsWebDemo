"use strict";import U from"../Utilities.js";var TreeGridTick,addEvent=U.addEvent,isObject=U.isObject,isNumber=U.isNumber,pick=U.pick,wrap=U.wrap;!function(e){var t=!1;function o(){var e=this;e.treeGrid||(e.treeGrid=new s(e))}function r(e,t,o,r,i,s,d,a,n){var l=this,p=pick(l.options&&l.options.labels,s),c=l.pos,h=l.axis,s="treegrid"===h.options.type,n=e.apply(l,[t,o,r,i,p,d,a,n]);return s&&(s=p&&isObject(p.symbol,!0)?p.symbol:{},p=p&&isNumber(p.indentation)?p.indentation:0,c=(c=(h=h.treeGrid.mapOfPosToGridNode)&&h[c])&&c.depth||1,n.x+=(s.width||0)+2*(s.padding||0)+(c-1)*p),n}function i(e){var t,o,r=this,i=r.pos,s=r.axis,d=r.label,a=s.treeGrid.mapOfPosToGridNode,n=s.options,l=pick(r.options&&r.options.labels,n&&n.labels),p=l&&isObject(l.symbol,!0)?l.symbol:{},c=a&&a[i],h=c&&c.depth,y="treegrid"===n.type,G=-1<s.tickPositions.indexOf(i),u="highcharts-treegrid-node-",m=s.chart.styledMode;y&&c&&d&&d.element&&d.addClass(u+"level-"+h),e.apply(r,Array.prototype.slice.call(arguments,1)),y&&d&&d.element&&c&&c.descendants&&0<c.descendants&&(t=s.treeGrid.isCollapsed(c),o=r,a={color:!m&&d.styles&&d.styles.color||"",collapsed:t,group:d.parentGroup,options:p,renderer:d.renderer,show:G,xy:d.xy},n=o.treeGrid,i=!n.labelIcon,h=a.renderer,e=a.xy,y=a.options,s=y.width||0,c=y.height||0,p={x:e.x-s/2-(y.padding||0),y:e.y-c/2},G=a.collapsed?90:180,o=a.show&&isNumber(p.y),(e=n.labelIcon)||(n.labelIcon=e=h.path(h.symbols[y.type](y.x||0,y.y||0,s,c)).addClass("highcharts-label-icon").add(a.group)),e.attr({y:o?0:-9999}),h.styledMode||e.attr({cursor:"pointer",fill:pick(a.color,"#666666"),"stroke-width":1,stroke:y.lineColor,strokeWidth:y.lineWidth||0}),e[i?"attr":"animate"]({translateX:p.x,translateY:p.y,rotation:G}),G=u+(t?"expanded":"collapsed"),d.addClass(u+(t?"collapsed":"expanded")).removeClass(G),m||d.css({cursor:"pointer"}),[d,r.treeGrid.labelIcon].forEach(function(e){e&&!e.attachedTreeGridEvents&&(addEvent(e.element,"mouseover",function(){var e;(e=d).addClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:"underline"})}),addEvent(e.element,"mouseout",function(){var e,t;e=d,t=isObject((t=l).style)?t.style:{},e.removeClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:t.textDecoration})}),addEvent(e.element,"click",function(){r.treeGrid.toggleCollapse()}),e.attachedTreeGridEvents=!0)}))}e.compose=function(e){t||(addEvent(e,"init",o),wrap(e.prototype,"getLabelPosition",r),wrap(e.prototype,"renderLabel",i),e.prototype.collapse=function(e){this.treeGrid.collapse(e)},e.prototype.expand=function(e){this.treeGrid.expand(e)},e.prototype.toggleCollapse=function(e){this.treeGrid.toggleCollapse(e)},t=!0)};var s=(d.prototype.collapse=function(e){var t=this.tick,o=t.axis,r=o.brokenAxis;r&&o.treeGrid.mapOfPosToGridNode&&(t=t.pos,t=o.treeGrid.mapOfPosToGridNode[t],t=o.treeGrid.collapse(t),r.setBreaks(t,pick(e,!0)))},d.prototype.expand=function(e){var t=this.tick,o=t.axis,r=o.brokenAxis;r&&o.treeGrid.mapOfPosToGridNode&&(t=t.pos,t=o.treeGrid.mapOfPosToGridNode[t],t=o.treeGrid.expand(t),r.setBreaks(t,pick(e,!0)))},d.prototype.toggleCollapse=function(e){var t=this.tick,o=t.axis,r=o.brokenAxis;r&&o.treeGrid.mapOfPosToGridNode&&(t=t.pos,t=o.treeGrid.mapOfPosToGridNode[t],t=o.treeGrid.toggleCollapse(t),r.setBreaks(t,pick(e,!0)))},d);function d(e){this.tick=e}e.Additions=s}(TreeGridTick=TreeGridTick||{});export default TreeGridTick;