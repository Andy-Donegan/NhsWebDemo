"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,o,i){e.hasOwnProperty(t)||(e[t]=i.apply(null,o))}t(e=e?e._modules:{},"Stock/Indicators/MultipleLinesComposition.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(u,e){var t,o,i,n,r,d=u.seriesTypes.sma,f=e.defined,y=e.error,m=e.merge;function s(e){var t=[];if(e=e||this.points,this.fillGraph&&this.nextPoints){if((o=d.prototype.getGraphPath.call(this,this.nextPoints))&&o.length){o[0][0]="L";for(var o,t=d.prototype.getGraphPath.call(this,e),i=(o=o.slice(0,t.length)).length-1;0<=i;i--)t.push(o[i])}}else t=d.prototype.getGraphPath.apply(this,arguments);return t}function a(){var o,e,i=this,t=i.linesApiNames,n=i.areaLinesNames,r=i.points,s=i.options,a=i.graph,p={options:{gapSize:s.gapSize}},l=[],h=i.getTranslatedLinesNames(i.pointValKey),c=r.length;h.forEach(function(e,t){for(l[t]=[];c--;)o=r[c],l[t].push({x:o.x,plotX:o.plotX,plotY:o[e],isNull:!f(o[e])});c=r.length}),this.userOptions.fillColor&&n.length&&(e=h.indexOf(g(n[0])),e=l[e],n=1===n.length?r:l[h.indexOf(g(n[1]))],h=i.color,i.points=n,i.nextPoints=e,i.color=this.userOptions.fillColor,i.options=m(r,p),i.graph=i.area,i.fillGraph=!0,u.seriesTypes.sma.prototype.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=h),t.forEach(function(e,t){l[t]?(i.points=l[t],s[e]?i.options=m(s[e].styles,p):y('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+e],d.prototype.drawGraph.call(i),i["graph"+e]=i.graph):y('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=r,i.options=s,i.graph=a,d.prototype.drawGraph.call(i)}function p(t){var o=[];return(this.pointArrayMap||[]).forEach(function(e){e!==t&&o.push(g(e))}),o}function g(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function l(t){var o=[];return(this.pointArrayMap||[]).forEach(function(e){o.push(t[e])}),o}function h(){var i,n=this,e=n.pointArrayMap,r=n.getTranslatedLinesNames();d.prototype.translate.apply(n,arguments),n.points.forEach(function(o){e.forEach(function(e,t){i=o[e],null!==(i=n.dataModify?n.dataModify.modifyValue(i):i)&&(o[r[t]]=n.yAxis.toPixels(i,!0))})})}return t=t||{},o=[],i=["bottomLine"],n=["top","bottom"],r=["top"],t.compose=function(e){var t;return-1===o.indexOf(e)&&(o.push(e),(t=e.prototype).linesApiNames=t.linesApiNames||i.slice(),t.pointArrayMap=t.pointArrayMap||n.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||r.slice(),t.drawGraph=a,t.getGraphPath=s,t.toYData=l,t.translate=h,t.getTranslatedLinesNames=p),e},t}),t(e,"Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js",[e["Stock/Indicators/MultipleLinesComposition.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,f,t){var i,o,n=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}),r=f.seriesTypes.sma,y=t.correctFloat,s=t.extend,a=t.merge;function p(){var e=null!==o&&o.apply(this,arguments)||this;return e.data=void 0,e.options=void 0,e.points=void 0,e}return n(p,o=r),p.prototype.init=function(){f.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=a({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},p.prototype.getValues=function(e,t){var o=t.period,i=t.periodATR,n=t.multiplierATR,r=(r=e.yData)?r.length:0,s=[];t=f.seriesTypes.ema.prototype.getValues(e,{period:o,index:t.index});var a,p=f.seriesTypes.atr.prototype.getValues(e,{period:i}),l=[],h=[];if(!(r<o)){for(a=o;a<=r;a++){var c=t.values[a-o],u=p.values[a-i],d=c[0];e=y(c[1]+n*u[1]),u=y(c[1]-n*u[1]),c=c[1],s.push([d,e,c,u]),l.push(d),h.push([e,c,u])}return{values:s,xData:l,yData:h}}},p.defaultOptions=a(r.defaultOptions,{params:{index:0,period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1}),s((t=p).prototype,{nameBase:"Keltner Channels",areaLinesNames:["top","bottom"],nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),e.compose(t),f.registerSeriesType("keltnerchannels",t),t}),t(e,"masters/indicators/keltner-channels.src.js",[],function(){})});