"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/dmi",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){t=t?t._modules:{};function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(h,t){var e,o,i,a,n,f=h.seriesTypes.sma,y=t.defined,d=t.error,m=t.merge;function s(t){var e,o=this,i=[],a=[];if(t=t||this.points,o.fillGraph&&o.nextPoints){if((e=f.prototype.getGraphPath.call(o,o.nextPoints))&&e.length){e[0][0]="L";for(var i=f.prototype.getGraphPath.call(o,t),n=(a=e.slice(0,i.length)).length-1;0<=n;n--)i.push(a[n])}}else i=f.prototype.getGraphPath.apply(o,arguments);return i}function r(){var o,i=this,t=i.pointValKey,e=i.linesApiNames,a=i.areaLinesNames,n=i.points,s=i.options,r=i.graph,p={options:{gapSize:s.gapSize}},l=[],c=i.getTranslatedLinesNames(t),u=n.length;c.forEach(function(t,e){for(l[e]=[];u--;)o=n[u],l[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!y(o[t])});u=n.length}),this.userOptions.fillColor&&a.length&&(t=c.indexOf(g(a[0])),t=l[t],c=1===a.length?n:l[c.indexOf(g(a[1]))],a=i.color,i.points=c,i.nextPoints=t,i.color=this.userOptions.fillColor,i.options=m(n,p),i.graph=i.area,i.fillGraph=!0,h.seriesTypes.sma.prototype.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=a),e.forEach(function(t,e){l[e]?(i.points=l[e],s[t]?i.options=m(s[t].styles,p):d('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],f.prototype.drawGraph.call(i),i["graph"+t]=i.graph):d('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=s,i.graph=r,f.prototype.drawGraph.call(i)}function p(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&o.push(g(t))}),o}function g(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function l(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o}function c(){var i,a=this,t=a.pointArrayMap,n=a.getTranslatedLinesNames();f.prototype.translate.apply(a,arguments),a.points.forEach(function(o){t.forEach(function(t,e){i=o[t],null!==(i=a.dataModify?a.dataModify.modifyValue(i):i)&&(o[n[e]]=a.yAxis.toPixels(i,!0))})})}return e=e||{},o=[],i=["bottomLine"],a=["top","bottom"],n=["top"],e.compose=function(t){var e;return-1===o.indexOf(t)&&(o.push(t),(e=t.prototype).linesApiNames=e.linesApiNames||i.slice(),e.pointArrayMap=e.pointArrayMap||a.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||n.slice(),e.drawGraph=r,e.getGraphPath=s,e.toYData=l,e.translate=c,e.getTranslatedLinesNames=p),t},e}),e(t,"Stock/Indicators/DMI/DMIIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o){var i,a,n=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),s=e.seriesTypes.sma,r=o.correctFloat,p=o.extend,x=o.isArray,o=o.merge,s=(n(l,a=s),l.prototype.calculateDM=function(t,e,o){var i=t[e][1],a=t[e][2],n=t[e-1][1],e=t[e-1][2],a=e-a<i-n?o?Math.max(i-n,0):0:o?0:Math.max(e-a,0);return r(a)},l.prototype.calculateDI=function(t,e){return t/e*100},l.prototype.calculateDX=function(t,e){return r(Math.abs(t-e)/Math.abs(t+e)*100)},l.prototype.smoothValues=function(t,e,o){return r(t-t/o+e)},l.prototype.getTR=function(t,e){return r(Math.max(t[1]-t[2],e?Math.abs(t[1]-e[3]):0,e?Math.abs(t[2]-e[3]):0))},l.prototype.getValues=function(t,e){var o=e.period,i=t.xData,a=t.yData,n=a?a.length:0,s=[],r=[],p=[];if(!(i.length<=o)&&x(a[0])&&4===a[0].length){for(var l=0,c=0,u=0,h=1;h<n;h++){var f,y,d,m=void 0,g=void 0,D=void 0,v=void 0,M=void 0,I=void 0;h<=o?(l+=m=this.calculateDM(a,h,!0),c+=g=this.calculateDM(a,h),u+=D=this.getTR(a[h],a[h-1]),h===o&&(v=this.calculateDI(l,u),M=this.calculateDI(c,u),I=this.calculateDX(l,c),s.push([i[h],I,v,M]),r.push(i[h]),p.push([I,v,M]))):(m=this.calculateDM(a,h,!0),g=this.calculateDM(a,h),D=this.getTR(a[h],a[h-1]),f=this.smoothValues(l,m,o),y=this.smoothValues(c,g,o),d=this.smoothValues(u,D,o),c=y,v=this.calculateDI(l=f,u=d),M=this.calculateDI(c,u),I=this.calculateDX(l,c),s.push([i[h],I,v,M]),r.push(i[h]),p.push([I,v,M]))}return{values:s,xData:r,yData:p}}},l.defaultOptions=o(s.defaultOptions,{params:{index:void 0},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">DX</span>: {point.y}<br/><span style="color: {point.series.options.plusDILine.styles.lineColor}">+DI</span>: {point.plusDI}<br/><span style="color: {point.series.options.minusDILine.styles.lineColor}">-DI</span>: {point.minusDI}<br/>'},plusDILine:{styles:{lineWidth:1,lineColor:"#06b535"}},minusDILine:{styles:{lineWidth:1,lineColor:"#f21313"}},dataGrouping:{approximation:"averages"}}),l);function l(){var t=null!==a&&a.apply(this,arguments)||this;return t.options=void 0,t}return p(s.prototype,{areaLinesNames:[],nameBase:"DMI",linesApiNames:["plusDILine","minusDILine"],pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y"}),t.compose(s),e.registerSeriesType("dmi",s),s}),e(t,"masters/indicators/dmi.src.js",[],function(){})});